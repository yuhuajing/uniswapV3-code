{
	"id": "9f38d55459ab5c988ca07d1605583aa3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/lib/TickBitmap.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\r\npragma solidity >=0.5.0;\r\n\r\nimport './BitMath.sol';\r\n\r\n/// @title Packed tick initialized state library\r\n/// @notice Stores a packed mapping of tick index to its initialized state\r\n/// @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\r\nlibrary TickBitmap {\r\n    /// @notice Computes the position in the mapping where the initialized bit for a tick lives\r\n    /// @param tick The tick for which to compute the position\r\n    /// @return wordPos The key in the mapping containing the word in which the bit is stored\r\n    /// @return bitPos The bit position in the word where the flag is stored\r\n    function position(int24 tick) public pure returns (int16 wordPos, uint8 bitPos) {\r\n        wordPos = int16(tick >> 8);\r\n        bitPos = uint8(uint24(tick % 256));\r\n    }\r\n\r\n    /// @notice Flips the initialized state for a given tick from false to true, or vice versa\r\n    /// @param self The mapping in which to flip the tick\r\n    /// @param tick The tick to flip\r\n    /// @param tickSpacing The spacing between usable ticks\r\n    function flipTick(\r\n        mapping(int16 => uint256) storage self,\r\n        int24 tick,\r\n        int24 tickSpacing\r\n    ) public {\r\n        require(tick % tickSpacing == 0); // ensure that the tick is spaced\r\n        (int16 wordPos, uint8 bitPos) = position(tick / tickSpacing);\r\n        uint256 mask = 1 << bitPos;\r\n        self[wordPos] ^= mask;\r\n    }\r\n\r\n    /// @notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\r\n    /// to the left (less than or equal to) or right (greater than) of the given tick\r\n    /// @param self The mapping in which to compute the next initialized tick\r\n    /// @param tick The starting tick\r\n    /// @param tickSpacing The spacing between usable ticks\r\n    /// @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\r\n    /// @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\r\n    /// @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks\r\n    function nextInitializedTickWithinOneWord(\r\n        mapping(int16 => uint256) storage self,\r\n        int24 tick,\r\n        int24 tickSpacing,\r\n        bool lte\r\n    ) public view returns (int24 next, bool initialized) {\r\n        int24 compressed = tick / tickSpacing;\r\n        if (tick < 0 && tick % tickSpacing != 0) compressed--; // round towards negative infinity\r\n\r\n        if (lte) {\r\n            (int16 wordPos, uint8 bitPos) = position(compressed);\r\n            // all the 1s at or to the right of the current bitPos\r\n            uint256 mask = (1 << bitPos) - 1 + (1 << bitPos);\r\n            uint256 masked = self[wordPos] & mask;\r\n\r\n            // if there are no initialized ticks to the right of or at the current tick, return rightmost in the word\r\n            initialized = masked != 0;\r\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\r\n            next = initialized\r\n                ? (compressed - int24(uint24(bitPos - BitMath.mostSignificantBit(masked)))) * tickSpacing\r\n                : (compressed - int24(uint24(bitPos))) * tickSpacing;\r\n        } else {\r\n            // start from the word of the next tick, since the current tick state doesn't matter\r\n            (int16 wordPos, uint8 bitPos) = position(compressed + 1);\r\n            // all the 1s at or to the left of the bitPos\r\n            uint256 mask = ~((1 << bitPos) - 1);\r\n            uint256 masked = self[wordPos] & mask;\r\n\r\n            // if there are no initialized ticks to the left of the current tick, return leftmost in the word\r\n            initialized = masked != 0;\r\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\r\n            next = initialized\r\n                ? (compressed + 1 + int24(uint24((BitMath.leastSignificantBit(masked) - bitPos)))) * tickSpacing\r\n                : (compressed + 1 + int24(uint24((type(uint8).max - bitPos)))) * tickSpacing;\r\n        }\r\n    }\r\n}"
			},
			"src/lib/BitMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title BitMath\r\n/// @dev This library provides functionality for computing bit properties of an unsigned integer\r\nlibrary BitMath {\r\n    /// @notice Returns the index of the most significant bit of the number,\r\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\r\n    /// @dev The function satisfies the property:\r\n    ///     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\r\n    /// @param x the value for which to compute the most significant bit, must be greater than 0\r\n    /// @return r the index of the most significant bit\r\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\r\n        require(x > 0);\r\n\r\n        if (x >= 0x100000000000000000000000000000000) {\r\n            x >>= 128;\r\n            r += 128;\r\n        }\r\n        if (x >= 0x10000000000000000) {\r\n            x >>= 64;\r\n            r += 64;\r\n        }\r\n        if (x >= 0x100000000) {\r\n            x >>= 32;\r\n            r += 32;\r\n        }\r\n        if (x >= 0x10000) {\r\n            x >>= 16;\r\n            r += 16;\r\n        }\r\n        if (x >= 0x100) {\r\n            x >>= 8;\r\n            r += 8;\r\n        }\r\n        if (x >= 0x10) {\r\n            x >>= 4;\r\n            r += 4;\r\n        }\r\n        if (x >= 0x4) {\r\n            x >>= 2;\r\n            r += 2;\r\n        }\r\n        if (x >= 0x2) r += 1;\r\n    }\r\n\r\n    /// @notice Returns the index of the least significant bit of the number,\r\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\r\n    /// @dev The function satisfies the property:\r\n    ///     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\r\n    /// @param x the value for which to compute the least significant bit, must be greater than 0\r\n    /// @return r the index of the least significant bit\r\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {\r\n        require(x > 0);\r\n\r\n        r = 255;\r\n        if (x & type(uint128).max > 0) {\r\n            r -= 128;\r\n        } else {\r\n            x >>= 128;\r\n        }\r\n        if (x & type(uint64).max > 0) {\r\n            r -= 64;\r\n        } else {\r\n            x >>= 64;\r\n        }\r\n        if (x & type(uint32).max > 0) {\r\n            r -= 32;\r\n        } else {\r\n            x >>= 32;\r\n        }\r\n        if (x & type(uint16).max > 0) {\r\n            r -= 16;\r\n        } else {\r\n            x >>= 16;\r\n        }\r\n        if (x & type(uint8).max > 0) {\r\n            r -= 8;\r\n        } else {\r\n            x >>= 8;\r\n        }\r\n        if (x & 0xf > 0) {\r\n            r -= 4;\r\n        } else {\r\n            x >>= 4;\r\n        }\r\n        if (x & 0x3 > 0) {\r\n            r -= 2;\r\n        } else {\r\n            x >>= 2;\r\n        }\r\n        if (x & 0x1 > 0) r -= 1;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/\r",
				"forge-std/=lib/forge-std/src/\r",
				"prb-math/=lib/prb-math/contracts/"
			],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"src/lib/BitMath.sol": {
				"BitMath": {
					"abi": [],
					"devdoc": {
						"details": "This library provides functionality for computing bit properties of an unsigned integer",
						"kind": "dev",
						"methods": {},
						"title": "BitMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/BitMath.sol\":192:2882  library BitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/BitMath.sol\":192:2882  library BitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a236947b3d7a9cdbc00434ee49d5978ec23faf9e5a2b9c38a6630756d97d667a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a236947b3d7a9cdbc00434ee49d5978ec23faf9e5a2b9c38a6630756d97d667a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 CALLDATASIZE SWAP5 PUSH28 0x3D7A9CDBC00434EE49D5978EC23FAF9E5A2B9C38A6630756D97D667A PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "192:2690:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;192:2690:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a236947b3d7a9cdbc00434ee49d5978ec23faf9e5a2b9c38a6630756d97d667a64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 CALLDATASIZE SWAP5 PUSH28 0x3D7A9CDBC00434EE49D5978EC23FAF9E5A2B9C38A6630756D97D667A PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "192:2690:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"leastSignificantBit(uint256)": "infinite",
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 192,
									"end": 2882,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 2882,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a236947b3d7a9cdbc00434ee49d5978ec23faf9e5a2b9c38a6630756d97d667a64736f6c634300081a0033",
									".code": [
										{
											"begin": 192,
											"end": 2882,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 192,
											"end": 2882,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 192,
											"end": 2882,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 192,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 2882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 2882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 2882,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"src/lib/BitMath.sol",
								"src/lib/TickBitmap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides functionality for computing bit properties of an unsigned integer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/BitMath.sol\":\"BitMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\\r\",\":forge-std/=lib/forge-std/src/\\r\",\":prb-math/=lib/prb-math/contracts/\"]},\"sources\":{\"src/lib/BitMath.sol\":{\"keccak256\":\"0x3494469e9159272b661e57c5a15a0513e99ae9e9cf0ecfc6d3a4fa6002874482\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea3355f73915fb48a597944581ee6ff4736c04e7a3ec26b20001bfecd0178c7d\",\"dweb:/ipfs/QmVkpV8dsWGuJLFv1GSCNsNBmVJ9DqscW8p2VkZe7suQQV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/TickBitmap.sol": {
				"TickBitmap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "position",
							"outputs": [
								{
									"internalType": "int16",
									"name": "wordPos",
									"type": "int16"
								},
								{
									"internalType": "uint8",
									"name": "bitPos",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.",
						"kind": "dev",
						"methods": {
							"flipTick(mapping(int16 => uint256) storage,int24,int24)": {
								"params": {
									"self": "The mapping in which to flip the tick",
									"tick": "The tick to flip",
									"tickSpacing": "The spacing between usable ticks"
								}
							},
							"nextInitializedTickWithinOneWord(mapping(int16 => uint256) storage,int24,int24,bool)": {
								"params": {
									"lte": "Whether to search for the next initialized tick to the left (less than or equal to the starting tick)",
									"self": "The mapping in which to compute the next initialized tick",
									"tick": "The starting tick",
									"tickSpacing": "The spacing between usable ticks"
								},
								"returns": {
									"initialized": "Whether the next tick is initialized, as the function only searches within up to 256 ticks",
									"next": "The next initialized or uninitialized tick up to 256 ticks away from the current tick"
								}
							},
							"position(int24)": {
								"params": {
									"tick": "The tick for which to compute the position"
								},
								"returns": {
									"bitPos": "The bit position in the word where the flag is stored",
									"wordPos": "The key in the mapping containing the word in which the bit is stored"
								}
							}
						},
						"title": "Packed tick initialized state library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/TickBitmap.sol\":339:4227  library TickBitmap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/TickBitmap.sol\":339:4227  library TickBitmap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x120b7ff9\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3e7b7779\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9c4bba91\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"src/lib/TickBitmap.sol\":2234:4224  function nextInitializedTickWithinOneWord(... */\n    tag_2:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":944:945   */\n      0x02\n        /* \"#utility.yul\":933:954   */\n      swap4\n      swap1\n      swap4\n      signextend\n        /* \"#utility.yul\":915:955   */\n      dup4\n      mstore\n        /* \"#utility.yul\":998:1012   */\n      swap1\n      iszero\n        /* \"#utility.yul\":991:1013   */\n      iszero\n        /* \"#utility.yul\":986:988   */\n      0x20\n        /* \"#utility.yul\":971:989   */\n      dup4\n      add\n        /* \"#utility.yul\":964:1014   */\n      mstore\n        /* \"#utility.yul\":888:906   */\n      add\n        /* \"src/lib/TickBitmap.sol\":2234:4224  function nextInitializedTickWithinOneWord(... */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/lib/TickBitmap.sol\":699:869  function position(int24 tick) public pure returns (int16 wordPos, uint8 bitPos) {... */\n    tag_3:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1415:1416   */\n      0x01\n        /* \"#utility.yul\":1404:1425   */\n      swap4\n      swap1\n      swap4\n      signextend\n        /* \"#utility.yul\":1386:1426   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1474:1478   */\n      0xff\n        /* \"#utility.yul\":1462:1479   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1457:1459   */\n      0x20\n        /* \"#utility.yul\":1442:1460   */\n      dup4\n      add\n        /* \"#utility.yul\":1435:1480   */\n      mstore\n        /* \"#utility.yul\":1359:1377   */\n      add\n        /* \"src/lib/TickBitmap.sol\":699:869  function position(int24 tick) public pure returns (int16 wordPos, uint8 bitPos) {... */\n      tag_9\n        /* \"#utility.yul\":1212:1486   */\n      jump\n        /* \"src/lib/TickBitmap.sol\":1131:1486  function flipTick(... */\n    tag_4:\n      dup2\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"src/lib/TickBitmap.sol\":2234:4224  function nextInitializedTickWithinOneWord(... */\n    tag_8:\n        /* \"src/lib/TickBitmap.sol\":2421:2431  int24 next */\n      0x00\n      dup1\n      dup1\n        /* \"src/lib/TickBitmap.sol\":2481:2499  tick / tickSpacing */\n      tag_23\n        /* \"src/lib/TickBitmap.sol\":2488:2499  tickSpacing */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":2481:2485  tick */\n      dup8\n        /* \"src/lib/TickBitmap.sol\":2481:2499  tick / tickSpacing */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"src/lib/TickBitmap.sol\":2462:2499  int24 compressed = tick / tickSpacing */\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":2521:2522  0 */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2514:2518  tick */\n      dup7\n        /* \"src/lib/TickBitmap.sol\":2514:2522  tick < 0 */\n      0x02\n      signextend\n      slt\n        /* \"src/lib/TickBitmap.sol\":2514:2549  tick < 0 && tick % tickSpacing != 0 */\n      dup1\n      iszero\n      tag_25\n      jumpi\n      pop\n        /* \"src/lib/TickBitmap.sol\":2526:2544  tick % tickSpacing */\n      tag_26\n        /* \"src/lib/TickBitmap.sol\":2533:2544  tickSpacing */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":2526:2530  tick */\n      dup8\n        /* \"src/lib/TickBitmap.sol\":2526:2544  tick % tickSpacing */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"src/lib/TickBitmap.sol\":2526:2549  tick % tickSpacing != 0 */\n      0x02\n      signextend\n      iszero\n      iszero\n        /* \"src/lib/TickBitmap.sol\":2514:2549  tick < 0 && tick % tickSpacing != 0 */\n    tag_25:\n        /* \"src/lib/TickBitmap.sol\":2510:2563  if (tick < 0 && tick % tickSpacing != 0) compressed-- */\n      iszero\n      tag_28\n      jumpi\n        /* \"src/lib/TickBitmap.sol\":2551:2563  compressed-- */\n      dup1\n      tag_29\n      dup2\n      tag_30\n      jump\t// in\n    tag_29:\n      swap2\n      pop\n      pop\n        /* \"src/lib/TickBitmap.sol\":2510:2563  if (tick < 0 && tick % tickSpacing != 0) compressed-- */\n    tag_28:\n        /* \"src/lib/TickBitmap.sol\":2615:2618  lte */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":2611:4217  if (lte) {... */\n      iszero\n      tag_31\n      jumpi\n        /* \"src/lib/TickBitmap.sol\":2636:2649  int16 wordPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2651:2663  uint8 bitPos */\n      dup1\n        /* \"src/lib/TickBitmap.sol\":2667:2687  position(compressed) */\n      tag_32\n        /* \"src/lib/TickBitmap.sol\":2676:2686  compressed */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":2667:2675  position */\n      tag_14\n        /* \"src/lib/TickBitmap.sol\":2667:2687  position(compressed) */\n      jump\t// in\n    tag_32:\n        /* \"src/lib/TickBitmap.sol\":2635:2687  (int16 wordPos, uint8 bitPos) = position(compressed) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":2770:2782  uint256 mask */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2806:2807  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":2806:2817  1 << bitPos */\n      0xff\n      dup4\n      and\n      dup2\n      swap1\n      shl\n      swap1\n        /* \"src/lib/TickBitmap.sol\":2785:2802  (1 << bitPos) - 1 */\n      tag_33\n      swap1\n        /* \"src/lib/TickBitmap.sol\":2806:2817  1 << bitPos */\n      dup3\n        /* \"src/lib/TickBitmap.sol\":2785:2802  (1 << bitPos) - 1 */\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"src/lib/TickBitmap.sol\":2785:2818  (1 << bitPos) - 1 + (1 << bitPos) */\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"src/lib/TickBitmap.sol\":2850:2863  self[wordPos] */\n      0x01\n      dup5\n      swap1\n      signextend\n        /* \"src/lib/TickBitmap.sol\":2833:2847  uint256 masked */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2850:2863  self[wordPos] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup13\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/lib/TickBitmap.sol\":2850:2870  self[wordPos] & mask */\n      dup2\n      and\n        /* \"src/lib/TickBitmap.sol\":3020:3031  masked != 0 */\n      dup1\n      iszero\n      iszero\n      swap7\n      pop\n        /* \"src/lib/TickBitmap.sol\":2770:2818  uint256 mask = (1 << bitPos) - 1 + (1 << bitPos) */\n      swap1\n      swap2\n      pop\n        /* \"src/lib/TickBitmap.sol\":3020:3031  masked != 0 */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":3164:3352  initialized... */\n      tag_37\n      jumpi\n        /* \"src/lib/TickBitmap.sol\":3341:3352  tickSpacing */\n      dup9\n        /* \"src/lib/TickBitmap.sol\":3303:3337  compressed - int24(uint24(bitPos)) */\n      tag_38\n        /* \"src/lib/TickBitmap.sol\":3322:3336  uint24(bitPos) */\n      0xff\n      dup6\n      and\n        /* \"src/lib/TickBitmap.sol\":3303:3313  compressed */\n      dup8\n        /* \"src/lib/TickBitmap.sol\":3303:3337  compressed - int24(uint24(bitPos)) */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"src/lib/TickBitmap.sol\":3302:3352  (compressed - int24(uint24(bitPos))) * tickSpacing */\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"src/lib/TickBitmap.sol\":3164:3352  initialized... */\n      jump(tag_48)\n    tag_37:\n        /* \"src/lib/TickBitmap.sol\":3271:3282  tickSpacing */\n      dup9\n        /* \"src/lib/TickBitmap.sol\":3231:3265  BitMath.mostSignificantBit(masked) */\n      tag_43\n        /* \"src/lib/TickBitmap.sol\":3258:3264  masked */\n      dup3\n        /* \"src/lib/TickBitmap.sol\":3231:3257  BitMath.mostSignificantBit */\n      tag_44\n        /* \"src/lib/TickBitmap.sol\":3231:3265  BitMath.mostSignificantBit(masked) */\n      jump\t// in\n    tag_43:\n        /* \"src/lib/TickBitmap.sol\":3222:3265  bitPos - BitMath.mostSignificantBit(masked) */\n      tag_45\n      swap1\n        /* \"src/lib/TickBitmap.sol\":3222:3228  bitPos */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":3222:3265  bitPos - BitMath.mostSignificantBit(masked) */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"src/lib/TickBitmap.sol\":3196:3267  compressed - int24(uint24(bitPos - BitMath.mostSignificantBit(masked))) */\n      tag_47\n      swap1\n        /* \"src/lib/TickBitmap.sol\":3215:3266  uint24(bitPos - BitMath.mostSignificantBit(masked)) */\n      0xff\n      and\n        /* \"src/lib/TickBitmap.sol\":3196:3206  compressed */\n      dup8\n        /* \"src/lib/TickBitmap.sol\":3196:3267  compressed - int24(uint24(bitPos - BitMath.mostSignificantBit(masked))) */\n      tag_39\n      jump\t// in\n    tag_47:\n        /* \"src/lib/TickBitmap.sol\":3195:3282  (compressed - int24(uint24(bitPos - BitMath.mostSignificantBit(masked)))) * tickSpacing */\n      tag_48\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_48:\n        /* \"src/lib/TickBitmap.sol\":3157:3352  next = initialized... */\n      swap7\n      pop\n        /* \"src/lib/TickBitmap.sol\":2620:3364  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/lib/TickBitmap.sol\":2611:4217  if (lte) {... */\n      jump(tag_49)\n    tag_31:\n        /* \"src/lib/TickBitmap.sol\":3484:3497  int16 wordPos */\n      0x00\n      dup1\n        /* \"src/lib/TickBitmap.sol\":3515:3539  position(compressed + 1) */\n      tag_50\n        /* \"src/lib/TickBitmap.sol\":3524:3538  compressed + 1 */\n      tag_12\n        /* \"src/lib/TickBitmap.sol\":3524:3534  compressed */\n      dup5\n        /* \"src/lib/TickBitmap.sol\":3537:3538  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":3524:3538  compressed + 1 */\n      tag_52\n      jump\t// in\n        /* \"src/lib/TickBitmap.sol\":3515:3539  position(compressed + 1) */\n    tag_50:\n        /* \"src/lib/TickBitmap.sol\":3483:3539  (int16 wordPos, uint8 bitPos) = position(compressed + 1) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":3613:3625  uint256 mask */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":3630:3647  (1 << bitPos) - 1 */\n      tag_53\n        /* \"src/lib/TickBitmap.sol\":3646:3647  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":3631:3642  1 << bitPos */\n      0xff\n      dup5\n      and\n      dup2\n      swap1\n      shl\n        /* \"src/lib/TickBitmap.sol\":3630:3647  (1 << bitPos) - 1 */\n      tag_34\n      jump\t// in\n    tag_53:\n        /* \"src/lib/TickBitmap.sol\":3680:3693  self[wordPos] */\n      0x01\n      dup5\n      swap1\n      signextend\n        /* \"src/lib/TickBitmap.sol\":3663:3677  uint256 masked */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":3680:3693  self[wordPos] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup13\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/lib/TickBitmap.sol\":3628:3648  ~((1 << bitPos) - 1) */\n      swap1\n      not\n        /* \"src/lib/TickBitmap.sol\":3680:3700  self[wordPos] & mask */\n      swap1\n      dup2\n      and\n        /* \"src/lib/TickBitmap.sol\":3842:3853  masked != 0 */\n      dup1\n      iszero\n      iszero\n      swap7\n      pop\n        /* \"src/lib/TickBitmap.sol\":3628:3648  ~((1 << bitPos) - 1) */\n      swap1\n      swap2\n      pop\n        /* \"src/lib/TickBitmap.sol\":3842:3853  masked != 0 */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":3986:4205  initialized... */\n      tag_54\n      jumpi\n        /* \"src/lib/TickBitmap.sol\":4194:4205  tickSpacing */\n      dup9\n        /* \"src/lib/TickBitmap.sol\":4163:4187  type(uint8).max - bitPos */\n      tag_55\n        /* \"src/lib/TickBitmap.sol\":4181:4187  bitPos */\n      dup5\n        /* \"src/lib/TickBitmap.sol\":4163:4178  type(uint8).max */\n      0xff\n        /* \"src/lib/TickBitmap.sol\":4163:4187  type(uint8).max - bitPos */\n      tag_46\n      jump\t// in\n    tag_55:\n        /* \"src/lib/TickBitmap.sol\":4155:4189  uint24((type(uint8).max - bitPos)) */\n      0xff\n      and\n        /* \"src/lib/TickBitmap.sol\":4132:4146  compressed + 1 */\n      tag_56\n        /* \"src/lib/TickBitmap.sol\":4132:4142  compressed */\n      dup8\n        /* \"src/lib/TickBitmap.sol\":4145:4146  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":4132:4146  compressed + 1 */\n      tag_52\n      jump\t// in\n    tag_56:\n        /* \"src/lib/TickBitmap.sol\":4132:4190  compressed + 1 + int24(uint24((type(uint8).max - bitPos))) */\n      tag_57\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_57:\n        /* \"src/lib/TickBitmap.sol\":4131:4205  (compressed + 1 + int24(uint24((type(uint8).max - bitPos)))) * tickSpacing */\n      tag_58\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_58:\n        /* \"src/lib/TickBitmap.sol\":3986:4205  initialized... */\n      jump(tag_65)\n    tag_54:\n        /* \"src/lib/TickBitmap.sol\":4100:4111  tickSpacing */\n      dup9\n        /* \"src/lib/TickBitmap.sol\":4087:4093  bitPos */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":4049:4084  BitMath.leastSignificantBit(masked) */\n      tag_60\n        /* \"src/lib/TickBitmap.sol\":4077:4083  masked */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":4049:4076  BitMath.leastSignificantBit */\n      tag_61\n        /* \"src/lib/TickBitmap.sol\":4049:4084  BitMath.leastSignificantBit(masked) */\n      jump\t// in\n    tag_60:\n        /* \"src/lib/TickBitmap.sol\":4049:4093  BitMath.leastSignificantBit(masked) - bitPos */\n      tag_62\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_62:\n        /* \"src/lib/TickBitmap.sol\":4041:4095  uint24((BitMath.leastSignificantBit(masked) - bitPos)) */\n      0xff\n      and\n        /* \"src/lib/TickBitmap.sol\":4018:4032  compressed + 1 */\n      tag_63\n        /* \"src/lib/TickBitmap.sol\":4018:4028  compressed */\n      dup8\n        /* \"src/lib/TickBitmap.sol\":4031:4032  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":4018:4032  compressed + 1 */\n      tag_52\n      jump\t// in\n    tag_63:\n        /* \"src/lib/TickBitmap.sol\":4018:4096  compressed + 1 + int24(uint24((BitMath.leastSignificantBit(masked) - bitPos))) */\n      tag_64\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_64:\n        /* \"src/lib/TickBitmap.sol\":4017:4111  (compressed + 1 + int24(uint24((BitMath.leastSignificantBit(masked) - bitPos)))) * tickSpacing */\n      tag_65\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_65:\n        /* \"src/lib/TickBitmap.sol\":3979:4205  next = initialized... */\n      swap7\n      pop\n        /* \"src/lib/TickBitmap.sol\":3370:4217  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/lib/TickBitmap.sol\":2611:4217  if (lte) {... */\n    tag_49:\n        /* \"src/lib/TickBitmap.sol\":2451:4224  {... */\n      pop\n        /* \"src/lib/TickBitmap.sol\":2234:4224  function nextInitializedTickWithinOneWord(... */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/TickBitmap.sol\":699:869  function position(int24 tick) public pure returns (int16 wordPos, uint8 bitPos) {... */\n    tag_14:\n        /* \"src/lib/TickBitmap.sol\":806:815  tick >> 8 */\n      0x02\n      dup2\n      swap1\n      signextend\n        /* \"src/lib/TickBitmap.sol\":814:815  8 */\n      0x08\n        /* \"src/lib/TickBitmap.sol\":806:815  tick >> 8 */\n      sar\n        /* \"src/lib/TickBitmap.sol\":750:763  int16 wordPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":849:859  tick % 256 */\n      tag_67\n        /* \"src/lib/TickBitmap.sol\":856:859  256 */\n      0x0100\n        /* \"src/lib/TickBitmap.sol\":806:810  tick */\n      dup5\n        /* \"src/lib/TickBitmap.sol\":849:859  tick % 256 */\n      tag_27\n      jump\t// in\n    tag_67:\n        /* \"src/lib/TickBitmap.sol\":827:861  bitPos = uint8(uint24(tick % 256)) */\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":699:869  function position(int24 tick) public pure returns (int16 wordPos, uint8 bitPos) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"src/lib/TickBitmap.sol\":1131:1486  function flipTick(... */\n    tag_21:\n        /* \"src/lib/TickBitmap.sol\":1280:1298  tick % tickSpacing */\n      tag_69\n        /* \"src/lib/TickBitmap.sol\":1287:1298  tickSpacing */\n      dup2\n        /* \"src/lib/TickBitmap.sol\":1280:1284  tick */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":1280:1298  tick % tickSpacing */\n      tag_27\n      jump\t// in\n    tag_69:\n        /* \"src/lib/TickBitmap.sol\":1280:1303  tick % tickSpacing == 0 */\n      0x02\n      signextend\n      iszero\n        /* \"src/lib/TickBitmap.sol\":1272:1304  require(tick % tickSpacing == 0) */\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n        /* \"src/lib/TickBitmap.sol\":1350:1363  int16 wordPos */\n      0x00\n      dup1\n        /* \"src/lib/TickBitmap.sol\":1381:1409  position(tick / tickSpacing) */\n      tag_71\n        /* \"src/lib/TickBitmap.sol\":1390:1408  tick / tickSpacing */\n      tag_12\n        /* \"src/lib/TickBitmap.sol\":1397:1408  tickSpacing */\n      dup5\n        /* \"src/lib/TickBitmap.sol\":1390:1394  tick */\n      dup7\n        /* \"src/lib/TickBitmap.sol\":1390:1408  tick / tickSpacing */\n      tag_24\n      jump\t// in\n        /* \"src/lib/TickBitmap.sol\":1381:1409  position(tick / tickSpacing) */\n    tag_71:\n        /* \"src/lib/TickBitmap.sol\":1435:1436  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":1457:1470  self[wordPos] */\n      swap2\n      dup3\n      signextend\n        /* \"src/lib/TickBitmap.sol\":1420:1432  uint256 mask */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1457:1470  self[wordPos] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap8\n      swap1\n      swap8\n      mstore\n      0x40\n      swap1\n      swap7\n      keccak256\n        /* \"src/lib/TickBitmap.sol\":1457:1478  self[wordPos] ^= mask */\n      dup1\n      sload\n        /* \"src/lib/TickBitmap.sol\":1435:1446  1 << bitPos */\n      0xff\n      swap1\n      swap8\n      and\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"src/lib/TickBitmap.sol\":1457:1478  self[wordPos] ^= mask */\n      swap1\n      swap6\n      xor\n      swap1\n      swap5\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/lib/TickBitmap.sol\":1131:1486  function flipTick(... */\n      jump\t// out\n        /* \"src/lib/BitMath.sol\":683:1446  function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {... */\n    tag_44:\n        /* \"src/lib/BitMath.sol\":745:752  uint8 r */\n      0x00\n        /* \"src/lib/BitMath.sol\":777:778  0 */\n      dup1\n        /* \"src/lib/BitMath.sol\":773:774  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":773:778  x > 0 */\n      gt\n        /* \"src/lib/BitMath.sol\":765:779  require(x > 0) */\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      shl(0x80, 0x01)\n        /* \"src/lib/BitMath.sol\":796:797  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":796:836  x >= 0x100000000000000000000000000000000 */\n      lt\n        /* \"src/lib/BitMath.sol\":792:897  if (x >= 0x100000000000000000000000000000000) {... */\n      tag_75\n      jumpi\n        /* \"src/lib/BitMath.sol\":859:862  128 */\n      0x80\n        /* \"src/lib/BitMath.sol\":853:862  x >>= 128 */\n      swap2\n      dup3\n      shr\n      swap2\n        /* \"src/lib/BitMath.sol\":877:885  r += 128 */\n      tag_76\n      swap1\n      dup3\n      tag_77\n      jump\t// in\n    tag_76:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":792:897  if (x >= 0x100000000000000000000000000000000) {... */\n    tag_75:\n        /* \"src/lib/BitMath.sol\":916:935  0x10000000000000000 */\n      0x010000000000000000\n        /* \"src/lib/BitMath.sol\":911:912  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":911:935  x >= 0x10000000000000000 */\n      lt\n        /* \"src/lib/BitMath.sol\":907:994  if (x >= 0x10000000000000000) {... */\n      tag_78\n      jumpi\n        /* \"src/lib/BitMath.sol\":958:960  64 */\n      0x40\n        /* \"src/lib/BitMath.sol\":952:960  x >>= 64 */\n      swap2\n      dup3\n      shr\n      swap2\n        /* \"src/lib/BitMath.sol\":975:982  r += 64 */\n      tag_79\n      swap1\n      dup3\n      tag_77\n      jump\t// in\n    tag_79:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":907:994  if (x >= 0x10000000000000000) {... */\n    tag_78:\n        /* \"src/lib/BitMath.sol\":1013:1024  0x100000000 */\n      0x0100000000\n        /* \"src/lib/BitMath.sol\":1008:1009  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":1008:1024  x >= 0x100000000 */\n      lt\n        /* \"src/lib/BitMath.sol\":1004:1083  if (x >= 0x100000000) {... */\n      tag_80\n      jumpi\n        /* \"src/lib/BitMath.sol\":1047:1049  32 */\n      0x20\n        /* \"src/lib/BitMath.sol\":1041:1049  x >>= 32 */\n      swap2\n      dup3\n      shr\n      swap2\n        /* \"src/lib/BitMath.sol\":1064:1071  r += 32 */\n      tag_81\n      swap1\n      dup3\n      tag_77\n      jump\t// in\n    tag_81:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":1004:1083  if (x >= 0x100000000) {... */\n    tag_80:\n        /* \"src/lib/BitMath.sol\":1102:1109  0x10000 */\n      0x010000\n        /* \"src/lib/BitMath.sol\":1097:1098  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":1097:1109  x >= 0x10000 */\n      lt\n        /* \"src/lib/BitMath.sol\":1093:1168  if (x >= 0x10000) {... */\n      tag_82\n      jumpi\n        /* \"src/lib/BitMath.sol\":1132:1134  16 */\n      0x10\n        /* \"src/lib/BitMath.sol\":1126:1134  x >>= 16 */\n      swap2\n      dup3\n      shr\n      swap2\n        /* \"src/lib/BitMath.sol\":1149:1156  r += 16 */\n      tag_83\n      swap1\n      dup3\n      tag_77\n      jump\t// in\n    tag_83:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":1093:1168  if (x >= 0x10000) {... */\n    tag_82:\n        /* \"src/lib/BitMath.sol\":1187:1192  0x100 */\n      0x0100\n        /* \"src/lib/BitMath.sol\":1182:1183  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":1182:1192  x >= 0x100 */\n      lt\n        /* \"src/lib/BitMath.sol\":1178:1249  if (x >= 0x100) {... */\n      tag_84\n      jumpi\n        /* \"src/lib/BitMath.sol\":1215:1216  8 */\n      0x08\n        /* \"src/lib/BitMath.sol\":1209:1216  x >>= 8 */\n      swap2\n      dup3\n      shr\n      swap2\n        /* \"src/lib/BitMath.sol\":1231:1237  r += 8 */\n      tag_85\n      swap1\n      dup3\n      tag_77\n      jump\t// in\n    tag_85:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":1178:1249  if (x >= 0x100) {... */\n    tag_84:\n        /* \"src/lib/BitMath.sol\":1268:1272  0x10 */\n      0x10\n        /* \"src/lib/BitMath.sol\":1263:1264  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":1263:1272  x >= 0x10 */\n      lt\n        /* \"src/lib/BitMath.sol\":1259:1329  if (x >= 0x10) {... */\n      tag_86\n      jumpi\n        /* \"src/lib/BitMath.sol\":1295:1296  4 */\n      0x04\n        /* \"src/lib/BitMath.sol\":1289:1296  x >>= 4 */\n      swap2\n      dup3\n      shr\n      swap2\n        /* \"src/lib/BitMath.sol\":1311:1317  r += 4 */\n      tag_87\n      swap1\n      dup3\n      tag_77\n      jump\t// in\n    tag_87:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":1259:1329  if (x >= 0x10) {... */\n    tag_86:\n        /* \"src/lib/BitMath.sol\":1348:1351  0x4 */\n      0x04\n        /* \"src/lib/BitMath.sol\":1343:1344  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":1343:1351  x >= 0x4 */\n      lt\n        /* \"src/lib/BitMath.sol\":1339:1408  if (x >= 0x4) {... */\n      tag_88\n      jumpi\n        /* \"src/lib/BitMath.sol\":1374:1375  2 */\n      0x02\n        /* \"src/lib/BitMath.sol\":1368:1375  x >>= 2 */\n      swap2\n      dup3\n      shr\n      swap2\n        /* \"src/lib/BitMath.sol\":1390:1396  r += 2 */\n      tag_89\n      swap1\n      dup3\n      tag_77\n      jump\t// in\n    tag_89:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":1339:1408  if (x >= 0x4) {... */\n    tag_88:\n        /* \"src/lib/BitMath.sol\":1427:1430  0x2 */\n      0x02\n        /* \"src/lib/BitMath.sol\":1422:1423  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":1422:1430  x >= 0x2 */\n      lt\n        /* \"src/lib/BitMath.sol\":1418:1438  if (x >= 0x2) r += 1 */\n      tag_90\n      jumpi\n        /* \"src/lib/BitMath.sol\":1432:1438  r += 1 */\n      tag_91\n        /* \"src/lib/BitMath.sol\":1437:1438  1 */\n      0x01\n        /* \"src/lib/BitMath.sol\":1432:1438  r += 1 */\n      dup3\n      tag_77\n      jump\t// in\n    tag_91:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":1418:1438  if (x >= 0x2) r += 1 */\n    tag_90:\n        /* \"src/lib/BitMath.sol\":683:1446  function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/lib/BitMath.sol\":1945:2879  function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {... */\n    tag_61:\n        /* \"src/lib/BitMath.sol\":2008:2015  uint8 r */\n      0x00\n        /* \"src/lib/BitMath.sol\":2040:2041  0 */\n      dup1\n        /* \"src/lib/BitMath.sol\":2036:2037  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":2036:2041  x > 0 */\n      gt\n        /* \"src/lib/BitMath.sol\":2028:2042  require(x > 0) */\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n        /* \"src/lib/BitMath.sol\":2059:2062  255 */\n      0xff\n        /* \"src/lib/BitMath.sol\":2081:2098  type(uint128).max */\n      0xffffffffffffffffffffffffffffffff\n        /* \"src/lib/BitMath.sol\":2077:2098  x & type(uint128).max */\n      dup3\n      and\n        /* \"src/lib/BitMath.sol\":2077:2102  x & type(uint128).max > 0 */\n      iszero\n        /* \"src/lib/BitMath.sol\":2073:2181  if (x & type(uint128).max > 0) {... */\n      tag_94\n      jumpi\n        /* \"src/lib/BitMath.sol\":2119:2127  r -= 128 */\n      tag_95\n        /* \"src/lib/BitMath.sol\":2124:2127  128 */\n      0x80\n        /* \"src/lib/BitMath.sol\":2119:2127  r -= 128 */\n      dup3\n      tag_46\n      jump\t// in\n    tag_95:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2073:2181  if (x & type(uint128).max > 0) {... */\n      jump(tag_96)\n    tag_94:\n        /* \"src/lib/BitMath.sol\":2166:2169  128 */\n      0x80\n        /* \"src/lib/BitMath.sol\":2160:2169  x >>= 128 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2073:2181  if (x & type(uint128).max > 0) {... */\n    tag_96:\n        /* \"src/lib/BitMath.sol\":2199:2215  type(uint64).max */\n      0xffffffffffffffff\n        /* \"src/lib/BitMath.sol\":2195:2215  x & type(uint64).max */\n      dup3\n      and\n        /* \"src/lib/BitMath.sol\":2195:2219  x & type(uint64).max > 0 */\n      iszero\n        /* \"src/lib/BitMath.sol\":2191:2296  if (x & type(uint64).max > 0) {... */\n      tag_97\n      jumpi\n        /* \"src/lib/BitMath.sol\":2236:2243  r -= 64 */\n      tag_98\n        /* \"src/lib/BitMath.sol\":2241:2243  64 */\n      0x40\n        /* \"src/lib/BitMath.sol\":2236:2243  r -= 64 */\n      dup3\n      tag_46\n      jump\t// in\n    tag_98:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2191:2296  if (x & type(uint64).max > 0) {... */\n      jump(tag_99)\n    tag_97:\n        /* \"src/lib/BitMath.sol\":2282:2284  64 */\n      0x40\n        /* \"src/lib/BitMath.sol\":2276:2284  x >>= 64 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2191:2296  if (x & type(uint64).max > 0) {... */\n    tag_99:\n        /* \"src/lib/BitMath.sol\":2314:2330  type(uint32).max */\n      0xffffffff\n        /* \"src/lib/BitMath.sol\":2310:2330  x & type(uint32).max */\n      dup3\n      and\n        /* \"src/lib/BitMath.sol\":2310:2334  x & type(uint32).max > 0 */\n      iszero\n        /* \"src/lib/BitMath.sol\":2306:2411  if (x & type(uint32).max > 0) {... */\n      tag_100\n      jumpi\n        /* \"src/lib/BitMath.sol\":2351:2358  r -= 32 */\n      tag_101\n        /* \"src/lib/BitMath.sol\":2356:2358  32 */\n      0x20\n        /* \"src/lib/BitMath.sol\":2351:2358  r -= 32 */\n      dup3\n      tag_46\n      jump\t// in\n    tag_101:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2306:2411  if (x & type(uint32).max > 0) {... */\n      jump(tag_102)\n    tag_100:\n        /* \"src/lib/BitMath.sol\":2397:2399  32 */\n      0x20\n        /* \"src/lib/BitMath.sol\":2391:2399  x >>= 32 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2306:2411  if (x & type(uint32).max > 0) {... */\n    tag_102:\n        /* \"src/lib/BitMath.sol\":2429:2445  type(uint16).max */\n      0xffff\n        /* \"src/lib/BitMath.sol\":2425:2445  x & type(uint16).max */\n      dup3\n      and\n        /* \"src/lib/BitMath.sol\":2425:2449  x & type(uint16).max > 0 */\n      iszero\n        /* \"src/lib/BitMath.sol\":2421:2526  if (x & type(uint16).max > 0) {... */\n      tag_103\n      jumpi\n        /* \"src/lib/BitMath.sol\":2466:2473  r -= 16 */\n      tag_104\n        /* \"src/lib/BitMath.sol\":2471:2473  16 */\n      0x10\n        /* \"src/lib/BitMath.sol\":2466:2473  r -= 16 */\n      dup3\n      tag_46\n      jump\t// in\n    tag_104:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2421:2526  if (x & type(uint16).max > 0) {... */\n      jump(tag_105)\n    tag_103:\n        /* \"src/lib/BitMath.sol\":2512:2514  16 */\n      0x10\n        /* \"src/lib/BitMath.sol\":2506:2514  x >>= 16 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2421:2526  if (x & type(uint16).max > 0) {... */\n    tag_105:\n        /* \"src/lib/BitMath.sol\":2544:2559  type(uint8).max */\n      0xff\n        /* \"src/lib/BitMath.sol\":2540:2559  x & type(uint8).max */\n      dup3\n      and\n        /* \"src/lib/BitMath.sol\":2540:2563  x & type(uint8).max > 0 */\n      iszero\n        /* \"src/lib/BitMath.sol\":2536:2638  if (x & type(uint8).max > 0) {... */\n      tag_106\n      jumpi\n        /* \"src/lib/BitMath.sol\":2580:2586  r -= 8 */\n      tag_107\n        /* \"src/lib/BitMath.sol\":2585:2586  8 */\n      0x08\n        /* \"src/lib/BitMath.sol\":2580:2586  r -= 8 */\n      dup3\n      tag_46\n      jump\t// in\n    tag_107:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2536:2638  if (x & type(uint8).max > 0) {... */\n      jump(tag_108)\n    tag_106:\n        /* \"src/lib/BitMath.sol\":2625:2626  8 */\n      0x08\n        /* \"src/lib/BitMath.sol\":2619:2626  x >>= 8 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2536:2638  if (x & type(uint8).max > 0) {... */\n    tag_108:\n        /* \"src/lib/BitMath.sol\":2656:2659  0xf */\n      0x0f\n        /* \"src/lib/BitMath.sol\":2652:2659  x & 0xf */\n      dup3\n      and\n        /* \"src/lib/BitMath.sol\":2652:2663  x & 0xf > 0 */\n      iszero\n        /* \"src/lib/BitMath.sol\":2648:2738  if (x & 0xf > 0) {... */\n      tag_109\n      jumpi\n        /* \"src/lib/BitMath.sol\":2680:2686  r -= 4 */\n      tag_110\n        /* \"src/lib/BitMath.sol\":2685:2686  4 */\n      0x04\n        /* \"src/lib/BitMath.sol\":2680:2686  r -= 4 */\n      dup3\n      tag_46\n      jump\t// in\n    tag_110:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2648:2738  if (x & 0xf > 0) {... */\n      jump(tag_111)\n    tag_109:\n        /* \"src/lib/BitMath.sol\":2725:2726  4 */\n      0x04\n        /* \"src/lib/BitMath.sol\":2719:2726  x >>= 4 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2648:2738  if (x & 0xf > 0) {... */\n    tag_111:\n        /* \"src/lib/BitMath.sol\":2756:2759  0x3 */\n      0x03\n        /* \"src/lib/BitMath.sol\":2752:2759  x & 0x3 */\n      dup3\n      and\n        /* \"src/lib/BitMath.sol\":2752:2763  x & 0x3 > 0 */\n      iszero\n        /* \"src/lib/BitMath.sol\":2748:2838  if (x & 0x3 > 0) {... */\n      tag_112\n      jumpi\n        /* \"src/lib/BitMath.sol\":2780:2786  r -= 2 */\n      tag_113\n        /* \"src/lib/BitMath.sol\":2785:2786  2 */\n      0x02\n        /* \"src/lib/BitMath.sol\":2780:2786  r -= 2 */\n      dup3\n      tag_46\n      jump\t// in\n    tag_113:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2748:2838  if (x & 0x3 > 0) {... */\n      jump(tag_114)\n    tag_112:\n        /* \"src/lib/BitMath.sol\":2825:2826  2 */\n      0x02\n        /* \"src/lib/BitMath.sol\":2819:2826  x >>= 2 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2748:2838  if (x & 0x3 > 0) {... */\n    tag_114:\n        /* \"src/lib/BitMath.sol\":2856:2859  0x1 */\n      0x01\n        /* \"src/lib/BitMath.sol\":2852:2859  x & 0x1 */\n      dup3\n      and\n        /* \"src/lib/BitMath.sol\":2852:2863  x & 0x1 > 0 */\n      iszero\n        /* \"src/lib/BitMath.sol\":2848:2871  if (x & 0x1 > 0) r -= 1 */\n      tag_90\n      jumpi\n        /* \"src/lib/BitMath.sol\":2865:2871  r -= 1 */\n      tag_91\n        /* \"src/lib/BitMath.sol\":2870:2871  1 */\n      0x01\n        /* \"src/lib/BitMath.sol\":2865:2871  r -= 1 */\n      dup3\n      tag_46\n      jump\t// in\n        /* \"#utility.yul\":14:174   */\n    tag_117:\n        /* \"#utility.yul\":80:100   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":140:141   */\n      0x02\n        /* \"#utility.yul\":129:149   */\n      dup2\n      swap1\n      signextend\n        /* \"#utility.yul\":119:150   */\n      dup2\n      eq\n        /* \"#utility.yul\":109:168   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":164:165   */\n      0x00\n        /* \"#utility.yul\":161:162   */\n      dup1\n        /* \"#utility.yul\":154:166   */\n      revert\n        /* \"#utility.yul\":179:738   */\n    tag_7:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":289:295   */\n      dup1\n        /* \"#utility.yul\":297:303   */\n      0x00\n        /* \"#utility.yul\":305:311   */\n      dup1\n        /* \"#utility.yul\":358:361   */\n      0x80\n        /* \"#utility.yul\":346:355   */\n      dup6\n        /* \"#utility.yul\":337:344   */\n      dup8\n        /* \"#utility.yul\":333:356   */\n      sub\n        /* \"#utility.yul\":329:362   */\n      slt\n        /* \"#utility.yul\":326:379   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":375:376   */\n      0x00\n        /* \"#utility.yul\":372:373   */\n      dup1\n        /* \"#utility.yul\":365:377   */\n      revert\n        /* \"#utility.yul\":326:379   */\n    tag_124:\n        /* \"#utility.yul\":420:443   */\n      dup5\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":486:522   */\n      tag_125\n        /* \"#utility.yul\":518:520   */\n      0x20\n        /* \"#utility.yul\":503:521   */\n      dup7\n      add\n        /* \"#utility.yul\":486:522   */\n      tag_117\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":476:522   */\n      swap3\n      pop\n        /* \"#utility.yul\":541:577   */\n      tag_126\n        /* \"#utility.yul\":573:575   */\n      0x40\n        /* \"#utility.yul\":562:571   */\n      dup7\n        /* \"#utility.yul\":558:576   */\n      add\n        /* \"#utility.yul\":541:577   */\n      tag_117\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":531:577   */\n      swap2\n      pop\n        /* \"#utility.yul\":629:631   */\n      0x60\n        /* \"#utility.yul\":618:627   */\n      dup6\n        /* \"#utility.yul\":614:632   */\n      add\n        /* \"#utility.yul\":601:633   */\n      calldataload\n        /* \"#utility.yul\":678:685   */\n      dup1\n        /* \"#utility.yul\":671:686   */\n      iszero\n        /* \"#utility.yul\":664:687   */\n      iszero\n        /* \"#utility.yul\":655:662   */\n      dup2\n        /* \"#utility.yul\":652:688   */\n      eq\n        /* \"#utility.yul\":642:706   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":702:703   */\n      0x00\n        /* \"#utility.yul\":699:700   */\n      dup1\n        /* \"#utility.yul\":692:704   */\n      revert\n        /* \"#utility.yul\":642:706   */\n    tag_127:\n        /* \"#utility.yul\":179:738   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1207   */\n    tag_13:\n        /* \"#utility.yul\":1082:1088   */\n      0x00\n        /* \"#utility.yul\":1135:1137   */\n      0x20\n        /* \"#utility.yul\":1123:1132   */\n      dup3\n        /* \"#utility.yul\":1114:1121   */\n      dup5\n        /* \"#utility.yul\":1110:1133   */\n      sub\n        /* \"#utility.yul\":1106:1138   */\n      slt\n        /* \"#utility.yul\":1103:1155   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":1151:1152   */\n      0x00\n        /* \"#utility.yul\":1148:1149   */\n      dup1\n        /* \"#utility.yul\":1141:1153   */\n      revert\n        /* \"#utility.yul\":1103:1155   */\n    tag_130:\n        /* \"#utility.yul\":1174:1201   */\n      tag_131\n        /* \"#utility.yul\":1191:1200   */\n      dup3\n        /* \"#utility.yul\":1174:1201   */\n      tag_117\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1164:1201   */\n      swap4\n        /* \"#utility.yul\":1025:1207   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1491:1880   */\n    tag_20:\n        /* \"#utility.yul\":1587:1593   */\n      0x00\n        /* \"#utility.yul\":1595:1601   */\n      dup1\n        /* \"#utility.yul\":1603:1609   */\n      0x00\n        /* \"#utility.yul\":1656:1658   */\n      0x60\n        /* \"#utility.yul\":1644:1653   */\n      dup5\n        /* \"#utility.yul\":1635:1642   */\n      dup7\n        /* \"#utility.yul\":1631:1654   */\n      sub\n        /* \"#utility.yul\":1627:1659   */\n      slt\n        /* \"#utility.yul\":1624:1676   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":1672:1673   */\n      0x00\n        /* \"#utility.yul\":1669:1670   */\n      dup1\n        /* \"#utility.yul\":1662:1674   */\n      revert\n        /* \"#utility.yul\":1624:1676   */\n    tag_134:\n        /* \"#utility.yul\":1717:1740   */\n      dup4\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":1783:1819   */\n      tag_135\n        /* \"#utility.yul\":1815:1817   */\n      0x20\n        /* \"#utility.yul\":1800:1818   */\n      dup6\n      add\n        /* \"#utility.yul\":1783:1819   */\n      tag_117\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1773:1819   */\n      swap2\n      pop\n        /* \"#utility.yul\":1838:1874   */\n      tag_136\n        /* \"#utility.yul\":1870:1872   */\n      0x40\n        /* \"#utility.yul\":1859:1868   */\n      dup6\n        /* \"#utility.yul\":1855:1873   */\n      add\n        /* \"#utility.yul\":1838:1874   */\n      tag_117\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1828:1874   */\n      swap1\n      pop\n        /* \"#utility.yul\":1491:1880   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1885:2012   */\n    tag_118:\n        /* \"#utility.yul\":1946:1956   */\n      0x4e487b71\n        /* \"#utility.yul\":1941:1944   */\n      0xe0\n        /* \"#utility.yul\":1937:1957   */\n      shl\n        /* \"#utility.yul\":1934:1935   */\n      0x00\n        /* \"#utility.yul\":1927:1958   */\n      mstore\n        /* \"#utility.yul\":1977:1981   */\n      0x12\n        /* \"#utility.yul\":1974:1975   */\n      0x04\n        /* \"#utility.yul\":1967:1982   */\n      mstore\n        /* \"#utility.yul\":2001:2005   */\n      0x24\n        /* \"#utility.yul\":1998:1999   */\n      0x00\n        /* \"#utility.yul\":1991:2006   */\n      revert\n        /* \"#utility.yul\":2017:2144   */\n    tag_119:\n        /* \"#utility.yul\":2078:2088   */\n      0x4e487b71\n        /* \"#utility.yul\":2073:2076   */\n      0xe0\n        /* \"#utility.yul\":2069:2089   */\n      shl\n        /* \"#utility.yul\":2066:2067   */\n      0x00\n        /* \"#utility.yul\":2059:2090   */\n      mstore\n        /* \"#utility.yul\":2109:2113   */\n      0x11\n        /* \"#utility.yul\":2106:2107   */\n      0x04\n        /* \"#utility.yul\":2099:2114   */\n      mstore\n        /* \"#utility.yul\":2133:2137   */\n      0x24\n        /* \"#utility.yul\":2130:2131   */\n      0x00\n        /* \"#utility.yul\":2123:2138   */\n      revert\n        /* \"#utility.yul\":2149:2424   */\n    tag_24:\n        /* \"#utility.yul\":2187:2188   */\n      0x00\n        /* \"#utility.yul\":2228:2229   */\n      dup2\n        /* \"#utility.yul\":2225:2226   */\n      0x02\n        /* \"#utility.yul\":2214:2230   */\n      signextend\n        /* \"#utility.yul\":2264:2265   */\n      dup4\n        /* \"#utility.yul\":2261:2262   */\n      0x02\n        /* \"#utility.yul\":2250:2266   */\n      signextend\n        /* \"#utility.yul\":2285:2288   */\n      dup1\n        /* \"#utility.yul\":2275:2312   */\n      tag_141\n      jumpi\n        /* \"#utility.yul\":2292:2310   */\n      tag_141\n      tag_118\n      jump\t// in\n    tag_141:\n      not(0x7fffff)\n        /* \"#utility.yul\":2328:2349   */\n      dup3\n      eq\n      not(0x00)\n        /* \"#utility.yul\":2351:2366   */\n      dup3\n      eq\n        /* \"#utility.yul\":2324:2367   */\n      and\n        /* \"#utility.yul\":2321:2390   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":2370:2388   */\n      tag_143\n      tag_119\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2404:2418   */\n      swap1\n      sdiv\n      swap4\n        /* \"#utility.yul\":2149:2424   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2429:2595   */\n    tag_27:\n        /* \"#utility.yul\":2459:2460   */\n      0x00\n        /* \"#utility.yul\":2500:2501   */\n      dup3\n        /* \"#utility.yul\":2497:2498   */\n      0x02\n        /* \"#utility.yul\":2486:2502   */\n      signextend\n        /* \"#utility.yul\":2521:2524   */\n      dup1\n        /* \"#utility.yul\":2511:2548   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":2528:2546   */\n      tag_146\n      tag_118\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2585:2588   */\n      dup1\n        /* \"#utility.yul\":2581:2582   */\n      dup4\n        /* \"#utility.yul\":2578:2579   */\n      0x02\n        /* \"#utility.yul\":2567:2583   */\n      signextend\n        /* \"#utility.yul\":2562:2589   */\n      smod\n        /* \"#utility.yul\":2557:2589   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2429:2595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2600:2792   */\n    tag_30:\n        /* \"#utility.yul\":2637:2640   */\n      0x00\n        /* \"#utility.yul\":2684:2689   */\n      dup2\n        /* \"#utility.yul\":2681:2682   */\n      0x02\n        /* \"#utility.yul\":2670:2690   */\n      signextend\n        /* \"#utility.yul\":2718:2725   */\n      0x7fffff\n        /* \"#utility.yul\":2714:2726   */\n      not\n        /* \"#utility.yul\":2705:2712   */\n      dup2\n        /* \"#utility.yul\":2702:2727   */\n      sub\n        /* \"#utility.yul\":2699:2750   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":2730:2748   */\n      tag_149\n      tag_119\n      jump\t// in\n    tag_149:\n      not(0x00)\n        /* \"#utility.yul\":2766:2786   */\n      add\n      swap3\n        /* \"#utility.yul\":2600:2792   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:2925   */\n    tag_34:\n        /* \"#utility.yul\":2864:2873   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2885:2896   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2882:2919   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":2899:2917   */\n      tag_152\n      tag_119\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2797:2925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2930:3055   */\n    tag_36:\n        /* \"#utility.yul\":2995:3004   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3016:3026   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3013:3049   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":3029:3047   */\n      tag_152\n      tag_119\n      jump\t// in\n        /* \"#utility.yul\":3060:3253   */\n    tag_39:\n        /* \"#utility.yul\":3158:3159   */\n      0x02\n        /* \"#utility.yul\":3147:3163   */\n      dup3\n      dup2\n      signextend\n        /* \"#utility.yul\":3129:3145   */\n      swap1\n      dup3\n      swap1\n      signextend\n        /* \"#utility.yul\":3125:3164   */\n      sub\n      not(0x7fffff)\n        /* \"#utility.yul\":3179:3202   */\n      dup2\n      slt\n        /* \"#utility.yul\":3214:3222   */\n      0x7fffff\n        /* \"#utility.yul\":3204:3223   */\n      dup3\n      sgt\n        /* \"#utility.yul\":3176:3224   */\n      or\n        /* \"#utility.yul\":3173:3247   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":3227:3245   */\n      tag_152\n      tag_119\n      jump\t// in\n        /* \"#utility.yul\":3258:3495   */\n    tag_41:\n        /* \"#utility.yul\":3296:3303   */\n      0x00\n        /* \"#utility.yul\":3373:3374   */\n      dup3\n        /* \"#utility.yul\":3370:3371   */\n      0x02\n        /* \"#utility.yul\":3359:3375   */\n      signextend\n        /* \"#utility.yul\":3355:3356   */\n      dup3\n        /* \"#utility.yul\":3352:3353   */\n      0x02\n        /* \"#utility.yul\":3341:3357   */\n      signextend\n        /* \"#utility.yul\":3337:3376   */\n      mul\n        /* \"#utility.yul\":3410:3421   */\n      dup1\n        /* \"#utility.yul\":3407:3408   */\n      0x02\n        /* \"#utility.yul\":3396:3422   */\n      signextend\n        /* \"#utility.yul\":3385:3422   */\n      swap2\n      pop\n        /* \"#utility.yul\":3453:3464   */\n      dup1\n        /* \"#utility.yul\":3444:3451   */\n      dup3\n        /* \"#utility.yul\":3441:3465   */\n      eq\n        /* \"#utility.yul\":3431:3489   */\n      tag_161\n      jumpi\n        /* \"#utility.yul\":3469:3487   */\n      tag_161\n      tag_119\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3431:3489   */\n      pop\n        /* \"#utility.yul\":3258:3495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3500:3651   */\n    tag_46:\n        /* \"#utility.yul\":3590:3594   */\n      0xff\n        /* \"#utility.yul\":3583:3595   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":3569:3581   */\n      dup3\n      dup3\n      and\n        /* \"#utility.yul\":3565:3596   */\n      sub\n      swap1\n        /* \"#utility.yul\":3608:3622   */\n      dup2\n      gt\n        /* \"#utility.yul\":3605:3645   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":3625:3643   */\n      tag_152\n      tag_119\n      jump\t// in\n        /* \"#utility.yul\":3656:3845   */\n    tag_52:\n        /* \"#utility.yul\":3752:3753   */\n      0x02\n        /* \"#utility.yul\":3723:3739   */\n      dup2\n      dup2\n      signextend\n        /* \"#utility.yul\":3741:3757   */\n      swap1\n      dup4\n      swap1\n      signextend\n        /* \"#utility.yul\":3719:3758   */\n      add\n        /* \"#utility.yul\":3806:3813   */\n      0x7fffff\n        /* \"#utility.yul\":3773:3791   */\n      dup2\n      sgt\n      not(0x7fffff)\n        /* \"#utility.yul\":3793:3815   */\n      dup3\n      slt\n        /* \"#utility.yul\":3770:3816   */\n      or\n        /* \"#utility.yul\":3767:3839   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":3819:3837   */\n      tag_152\n      tag_119\n      jump\t// in\n        /* \"#utility.yul\":3850:3998   */\n    tag_77:\n        /* \"#utility.yul\":3938:3942   */\n      0xff\n        /* \"#utility.yul\":3917:3929   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":3931:3943   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":3913:3944   */\n      add\n      swap1\n        /* \"#utility.yul\":3956:3969   */\n      dup2\n      gt\n        /* \"#utility.yul\":3953:3992   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":3972:3990   */\n      tag_152\n      tag_119\n      jump\t// in\n\n    auxdata: 0xa26469706673582212209ee4d7a7ac053e6201ad25e14019fe81848cd0a9c3797c00f1fd07b7a2ccab7264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "61079b610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063120b7ff9146100505780633e7b7779146100825780639c4bba91146100b1575b600080fd5b61006361005e366004610539565b6100d3565b6040805160029390930b83529015156020830152015b60405180910390f35b61009561009036600461058d565b61028b565b6040805160019390930b835260ff909116602083015201610079565b8180156100bd57600080fd5b506100d16100cc3660046105af565b6102a8565b005b600080806100e18587610617565b905060008660020b12801561010157506100fb8587610651565b60020b15155b15610114578061011081610673565b9150505b83156101c1576000806101268361028b565b90925090506000600160ff831681901b906101419082610696565b61014b91906106af565b600184900b600090815260208c90526040902054811680151596509091508561018b578861017c60ff8516876106c2565b61018691906106e7565b6101b6565b88610195826102fb565b61019f908561070e565b6101ac9060ff16876106c2565b6101b691906106e7565b965050505050610281565b6000806101d2610090846001610727565b909250905060006101ea600160ff841681901b610696565b600184900b600090815260208c905260409020549019908116801515965090915085610243578861021c8460ff61070e565b60ff1661022a876001610727565b6102349190610727565b61023e91906106e7565b61027a565b888361024e836103f3565b610258919061070e565b60ff16610266876001610727565b6102709190610727565b61027a91906106e7565b9650505050505b5094509492505050565b600281900b60081d60006102a161010084610651565b9050915091565b6102b28183610651565b60020b156102bf57600080fd5b6000806102cf6100908486610617565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b600080821161030957600080fd5b600160801b821061032757608091821c91610324908261074c565b90505b68010000000000000000821061034a57604091821c91610347908261074c565b90505b640100000000821061036957602091821c91610366908261074c565b90505b62010000821061038657601091821c91610383908261074c565b90505b61010082106103a257600891821c9161039f908261074c565b90505b601082106103bd57600491821c916103ba908261074c565b90505b600482106103d857600291821c916103d5908261074c565b90505b600282106103ee576103eb60018261074c565b90505b919050565b600080821161040157600080fd5b5060ff6fffffffffffffffffffffffffffffffff82161561042e5761042760808261070e565b9050610436565b608082901c91505b67ffffffffffffffff8216156104585761045160408261070e565b9050610460565b604082901c91505b63ffffffff82161561047e5761047760208261070e565b9050610486565b602082901c91505b61ffff8216156104a25761049b60108261070e565b90506104aa565b601082901c91505b60ff8216156104c5576104be60088261070e565b90506104cd565b600882901c91505b600f8216156104e8576104e160048261070e565b90506104f0565b600482901c91505b600382161561050b5761050460028261070e565b9050610513565b600282901c91505b60018216156103ee576103eb60018261070e565b8035600281900b81146103ee57600080fd5b6000806000806080858703121561054f57600080fd5b8435935061055f60208601610527565b925061056d60408601610527565b91506060850135801515811461058257600080fd5b939692955090935050565b60006020828403121561059f57600080fd5b6105a882610527565b9392505050565b6000806000606084860312156105c457600080fd5b833592506105d460208501610527565b91506105e260408501610527565b90509250925092565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160020b8360020b8061062e5761062e6105eb565b627fffff1982146000198214161561064857610648610601565b90059392505050565b60008260020b80610664576106646105eb565b808360020b0791505092915050565b60008160020b627fffff19810361068c5761068c610601565b6000190192915050565b818103818111156106a9576106a9610601565b92915050565b808201808211156106a9576106a9610601565b600282810b9082900b03627fffff198112627fffff821317156106a9576106a9610601565b60008260020b8260020b028060020b915080821461070757610707610601565b5092915050565b60ff82811682821603908111156106a9576106a9610601565b600281810b9083900b01627fffff8113627fffff19821217156106a9576106a9610601565b60ff81811683821601908111156106a9576106a961060156fea26469706673582212209ee4d7a7ac053e6201ad25e14019fe81848cd0a9c3797c00f1fd07b7a2ccab7264736f6c634300081a0033",
							"opcodes": "PUSH2 0x79B PUSH2 0x39 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x120B7FF9 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x3E7B7779 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x9C4BBA91 EQ PUSH2 0xB1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x539 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 SWAP4 SWAP1 SWAP4 SIGNEXTEND DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 SWAP4 SWAP1 SWAP4 SIGNEXTEND DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x79 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xE1 DUP6 DUP8 PUSH2 0x617 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x2 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x101 JUMPI POP PUSH2 0xFB DUP6 DUP8 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x114 JUMPI DUP1 PUSH2 0x110 DUP2 PUSH2 0x673 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP4 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 PUSH2 0x126 DUP4 PUSH2 0x28B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF DUP4 AND DUP2 SWAP1 SHL SWAP1 PUSH2 0x141 SWAP1 DUP3 PUSH2 0x696 JUMP JUMPDEST PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x1 DUP5 SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP13 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 AND DUP1 ISZERO ISZERO SWAP7 POP SWAP1 SWAP2 POP DUP6 PUSH2 0x18B JUMPI DUP9 PUSH2 0x17C PUSH1 0xFF DUP6 AND DUP8 PUSH2 0x6C2 JUMP JUMPDEST PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x1B6 JUMP JUMPDEST DUP9 PUSH2 0x195 DUP3 PUSH2 0x2FB JUMP JUMPDEST PUSH2 0x19F SWAP1 DUP6 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x1AC SWAP1 PUSH1 0xFF AND DUP8 PUSH2 0x6C2 JUMP JUMPDEST PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x6E7 JUMP JUMPDEST SWAP7 POP POP POP POP POP PUSH2 0x281 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D2 PUSH2 0x90 DUP5 PUSH1 0x1 PUSH2 0x727 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x1EA PUSH1 0x1 PUSH1 0xFF DUP5 AND DUP2 SWAP1 SHL PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 DUP5 SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP13 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 NOT SWAP1 DUP2 AND DUP1 ISZERO ISZERO SWAP7 POP SWAP1 SWAP2 POP DUP6 PUSH2 0x243 JUMPI DUP9 PUSH2 0x21C DUP5 PUSH1 0xFF PUSH2 0x70E JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x22A DUP8 PUSH1 0x1 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST DUP9 DUP4 PUSH2 0x24E DUP4 PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x70E JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x266 DUP8 PUSH1 0x1 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x6E7 JUMP JUMPDEST SWAP7 POP POP POP POP POP JUMPDEST POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND PUSH1 0x8 SAR PUSH1 0x0 PUSH2 0x2A1 PUSH2 0x100 DUP5 PUSH2 0x651 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x2B2 DUP2 DUP4 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CF PUSH2 0x90 DUP5 DUP7 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x1 SWAP2 DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x40 SWAP1 SWAP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP8 AND SWAP2 SWAP1 SWAP2 SHL SWAP1 SWAP6 XOR SWAP1 SWAP5 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x327 JUMPI PUSH1 0x80 SWAP2 DUP3 SHR SWAP2 PUSH2 0x324 SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x34A JUMPI PUSH1 0x40 SWAP2 DUP3 SHR SWAP2 PUSH2 0x347 SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x369 JUMPI PUSH1 0x20 SWAP2 DUP3 SHR SWAP2 PUSH2 0x366 SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x386 JUMPI PUSH1 0x10 SWAP2 DUP3 SHR SWAP2 PUSH2 0x383 SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x3A2 JUMPI PUSH1 0x8 SWAP2 DUP3 SHR SWAP2 PUSH2 0x39F SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x3BD JUMPI PUSH1 0x4 SWAP2 DUP3 SHR SWAP2 PUSH2 0x3BA SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x3D8 JUMPI PUSH1 0x2 SWAP2 DUP3 SHR SWAP2 PUSH2 0x3D5 SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x3EE JUMPI PUSH2 0x3EB PUSH1 0x1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0x42E JUMPI PUSH2 0x427 PUSH1 0x80 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x436 JUMP JUMPDEST PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0x458 JUMPI PUSH2 0x451 PUSH1 0x40 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND ISZERO PUSH2 0x47E JUMPI PUSH2 0x477 PUSH1 0x20 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x486 JUMP JUMPDEST PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH2 0xFFFF DUP3 AND ISZERO PUSH2 0x4A2 JUMPI PUSH2 0x49B PUSH1 0x10 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x4C5 JUMPI PUSH2 0x4BE PUSH1 0x8 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0xF DUP3 AND ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4E1 PUSH1 0x4 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0x3 DUP3 AND ISZERO PUSH2 0x50B JUMPI PUSH2 0x504 PUSH1 0x2 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x513 JUMP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x3EE JUMPI PUSH2 0x3EB PUSH1 0x1 DUP3 PUSH2 0x70E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x55F PUSH1 0x20 DUP7 ADD PUSH2 0x527 JUMP JUMPDEST SWAP3 POP PUSH2 0x56D PUSH1 0x40 DUP7 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A8 DUP3 PUSH2 0x527 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x5D4 PUSH1 0x20 DUP6 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP PUSH2 0x5E2 PUSH1 0x40 DUP6 ADD PUSH2 0x527 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x2 SIGNEXTEND DUP1 PUSH2 0x62E JUMPI PUSH2 0x62E PUSH2 0x5EB JUMP JUMPDEST PUSH3 0x7FFFFF NOT DUP3 EQ PUSH1 0x0 NOT DUP3 EQ AND ISZERO PUSH2 0x648 JUMPI PUSH2 0x648 PUSH2 0x601 JUMP JUMPDEST SWAP1 SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 SIGNEXTEND DUP1 PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x5EB JUMP JUMPDEST DUP1 DUP4 PUSH1 0x2 SIGNEXTEND SMOD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND PUSH3 0x7FFFFF NOT DUP2 SUB PUSH2 0x68C JUMPI PUSH2 0x68C PUSH2 0x601 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x601 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x601 JUMP JUMPDEST PUSH1 0x2 DUP3 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SUB PUSH3 0x7FFFFF NOT DUP2 SLT PUSH3 0x7FFFFF DUP3 SGT OR ISZERO PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x601 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND MUL DUP1 PUSH1 0x2 SIGNEXTEND SWAP2 POP DUP1 DUP3 EQ PUSH2 0x707 JUMPI PUSH2 0x707 PUSH2 0x601 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x601 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND ADD PUSH3 0x7FFFFF DUP2 SGT PUSH3 0x7FFFFF NOT DUP3 SLT OR ISZERO PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x601 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x601 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xE4 0xD7 0xA7 0xAC SDIV RETURNDATACOPY PUSH3 0x1AD25 0xE1 BLOCKHASH NOT INVALID DUP2 DUP5 DUP13 0xD0 0xA9 0xC3 PUSH26 0x7C00F1FD07B7A2CCAB7264736F6C634300081A00330000000000 ",
							"sourceMap": "339:3888:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;339:3888:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@flipTick_357": {
									"entryPoint": 680,
									"id": 357,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@leastSignificantBit_277": {
									"entryPoint": 1011,
									"id": 277,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mostSignificantBit_116": {
									"entryPoint": 763,
									"id": 116,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nextInitializedTickWithinOneWord_550": {
									"entryPoint": 211,
									"id": 550,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@position_314": {
									"entryPoint": 651,
									"id": 314,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_int24": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int24": {
									"entryPoint": 1421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_mapping$_t_int16_$_t_uint256_$t_int24t_int24": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_mapping$_t_int16_$_t_uint256_$t_int24t_int24t_bool": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_int16_t_uint8__to_t_int16_t_uint8__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int24_t_bool__to_t_int24_t_bool__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_int24": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint8": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int24": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int24": {
									"entryPoint": 1767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int24": {
									"entryPoint": 1730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"decrement_t_int24": {
									"entryPoint": 1651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_int24": {
									"entryPoint": 1617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4000:2",
										"nodeType": "YulBlock",
										"src": "0:4000:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "61:113:2",
													"nodeType": "YulBlock",
													"src": "61:113:2",
													"statements": [
														{
															"nativeSrc": "71:29:2",
															"nodeType": "YulAssignment",
															"src": "71:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "93:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "93:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "80:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "80:12:2"
																},
																"nativeSrc": "80:20:2",
																"nodeType": "YulFunctionCall",
																"src": "80:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "71:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "71:5:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "152:16:2",
																"nodeType": "YulBlock",
																"src": "152:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "161:1:2",
																					"nodeType": "YulLiteral",
																					"src": "161:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "164:1:2",
																					"nodeType": "YulLiteral",
																					"src": "164:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "154:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "154:6:2"
																			},
																			"nativeSrc": "154:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "154:12:2"
																		},
																		"nativeSrc": "154:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "154:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "122:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "122:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "140:1:2",
																						"nodeType": "YulLiteral",
																						"src": "140:1:2",
																						"type": "",
																						"value": "2"
																					},
																					{
																						"name": "value",
																						"nativeSrc": "143:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "143:5:2"
																					}
																				],
																				"functionName": {
																					"name": "signextend",
																					"nativeSrc": "129:10:2",
																					"nodeType": "YulIdentifier",
																					"src": "129:10:2"
																				},
																				"nativeSrc": "129:20:2",
																				"nodeType": "YulFunctionCall",
																				"src": "129:20:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "119:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "119:2:2"
																		},
																		"nativeSrc": "119:31:2",
																		"nodeType": "YulFunctionCall",
																		"src": "119:31:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "112:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "112:6:2"
																},
																"nativeSrc": "112:39:2",
																"nodeType": "YulFunctionCall",
																"src": "112:39:2"
															},
															"nativeSrc": "109:59:2",
															"nodeType": "YulIf",
															"src": "109:59:2"
														}
													]
												},
												"name": "abi_decode_int24",
												"nativeSrc": "14:160:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "51:5:2",
														"nodeType": "YulTypedName",
														"src": "51:5:2",
														"type": ""
													}
												],
												"src": "14:160:2"
											},
											{
												"body": {
													"nativeSrc": "316:422:2",
													"nodeType": "YulBlock",
													"src": "316:422:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "363:16:2",
																"nodeType": "YulBlock",
																"src": "363:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "372:1:2",
																					"nodeType": "YulLiteral",
																					"src": "372:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "375:1:2",
																					"nodeType": "YulLiteral",
																					"src": "375:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "365:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "365:6:2"
																			},
																			"nativeSrc": "365:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "365:12:2"
																		},
																		"nativeSrc": "365:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "365:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "337:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "337:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "346:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "346:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "333:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "333:3:2"
																		},
																		"nativeSrc": "333:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "333:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "358:3:2",
																		"nodeType": "YulLiteral",
																		"src": "358:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "329:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "329:3:2"
																},
																"nativeSrc": "329:33:2",
																"nodeType": "YulFunctionCall",
																"src": "329:33:2"
															},
															"nativeSrc": "326:53:2",
															"nodeType": "YulIf",
															"src": "326:53:2"
														},
														{
															"nativeSrc": "388:14:2",
															"nodeType": "YulVariableDeclaration",
															"src": "388:14:2",
															"value": {
																"kind": "number",
																"nativeSrc": "401:1:2",
																"nodeType": "YulLiteral",
																"src": "401:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "392:5:2",
																	"nodeType": "YulTypedName",
																	"src": "392:5:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "411:32:2",
															"nodeType": "YulAssignment",
															"src": "411:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "433:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "433:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "420:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "420:12:2"
																},
																"nativeSrc": "420:23:2",
																"nodeType": "YulFunctionCall",
																"src": "420:23:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "411:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "411:5:2"
																}
															]
														},
														{
															"nativeSrc": "452:15:2",
															"nodeType": "YulAssignment",
															"src": "452:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "462:5:2",
																"nodeType": "YulIdentifier",
																"src": "462:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "452:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "452:6:2"
																}
															]
														},
														{
															"nativeSrc": "476:46:2",
															"nodeType": "YulAssignment",
															"src": "476:46:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "507:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "507:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "518:2:2",
																				"nodeType": "YulLiteral",
																				"src": "518:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "503:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "503:3:2"
																		},
																		"nativeSrc": "503:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "503:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24",
																	"nativeSrc": "486:16:2",
																	"nodeType": "YulIdentifier",
																	"src": "486:16:2"
																},
																"nativeSrc": "486:36:2",
																"nodeType": "YulFunctionCall",
																"src": "486:36:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "476:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:2"
																}
															]
														},
														{
															"nativeSrc": "531:46:2",
															"nodeType": "YulAssignment",
															"src": "531:46:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "562:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "562:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "573:2:2",
																				"nodeType": "YulLiteral",
																				"src": "573:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "558:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:2"
																		},
																		"nativeSrc": "558:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "558:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24",
																	"nativeSrc": "541:16:2",
																	"nodeType": "YulIdentifier",
																	"src": "541:16:2"
																},
																"nativeSrc": "541:36:2",
																"nodeType": "YulFunctionCall",
																"src": "541:36:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "531:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "531:6:2"
																}
															]
														},
														{
															"nativeSrc": "586:47:2",
															"nodeType": "YulVariableDeclaration",
															"src": "586:47:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "618:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "618:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "629:2:2",
																				"nodeType": "YulLiteral",
																				"src": "629:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "614:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "614:3:2"
																		},
																		"nativeSrc": "614:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "614:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "601:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "601:12:2"
																},
																"nativeSrc": "601:32:2",
																"nodeType": "YulFunctionCall",
																"src": "601:32:2"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "590:7:2",
																	"nodeType": "YulTypedName",
																	"src": "590:7:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "690:16:2",
																"nodeType": "YulBlock",
																"src": "690:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "699:1:2",
																					"nodeType": "YulLiteral",
																					"src": "699:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "702:1:2",
																					"nodeType": "YulLiteral",
																					"src": "702:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "692:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "692:6:2"
																			},
																			"nativeSrc": "692:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "692:12:2"
																		},
																		"nativeSrc": "692:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "692:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "655:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "655:7:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_1",
																								"nativeSrc": "678:7:2",
																								"nodeType": "YulIdentifier",
																								"src": "678:7:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "671:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "671:6:2"
																						},
																						"nativeSrc": "671:15:2",
																						"nodeType": "YulFunctionCall",
																						"src": "671:15:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "664:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "664:6:2"
																				},
																				"nativeSrc": "664:23:2",
																				"nodeType": "YulFunctionCall",
																				"src": "664:23:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "652:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "652:2:2"
																		},
																		"nativeSrc": "652:36:2",
																		"nodeType": "YulFunctionCall",
																		"src": "652:36:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "645:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:2"
																},
																"nativeSrc": "645:44:2",
																"nodeType": "YulFunctionCall",
																"src": "645:44:2"
															},
															"nativeSrc": "642:64:2",
															"nodeType": "YulIf",
															"src": "642:64:2"
														},
														{
															"nativeSrc": "715:17:2",
															"nodeType": "YulAssignment",
															"src": "715:17:2",
															"value": {
																"name": "value_1",
																"nativeSrc": "725:7:2",
																"nodeType": "YulIdentifier",
																"src": "725:7:2"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "715:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "715:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_mapping$_t_int16_$_t_uint256_$t_int24t_int24t_bool",
												"nativeSrc": "179:559:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "258:9:2",
														"nodeType": "YulTypedName",
														"src": "258:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "269:7:2",
														"nodeType": "YulTypedName",
														"src": "269:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "281:6:2",
														"nodeType": "YulTypedName",
														"src": "281:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "289:6:2",
														"nodeType": "YulTypedName",
														"src": "289:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "297:6:2",
														"nodeType": "YulTypedName",
														"src": "297:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "305:6:2",
														"nodeType": "YulTypedName",
														"src": "305:6:2",
														"type": ""
													}
												],
												"src": "179:559:2"
											},
											{
												"body": {
													"nativeSrc": "870:150:2",
													"nodeType": "YulBlock",
													"src": "870:150:2",
													"statements": [
														{
															"nativeSrc": "880:26:2",
															"nodeType": "YulAssignment",
															"src": "880:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "892:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "892:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "903:2:2",
																		"nodeType": "YulLiteral",
																		"src": "903:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "888:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "888:3:2"
																},
																"nativeSrc": "888:18:2",
																"nodeType": "YulFunctionCall",
																"src": "888:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "880:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "880:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "922:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "922:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "944:1:2",
																				"nodeType": "YulLiteral",
																				"src": "944:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value0",
																				"nativeSrc": "947:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:2"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "933:10:2",
																			"nodeType": "YulIdentifier",
																			"src": "933:10:2"
																		},
																		"nativeSrc": "933:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "933:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "915:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:2"
																},
																"nativeSrc": "915:40:2",
																"nodeType": "YulFunctionCall",
																"src": "915:40:2"
															},
															"nativeSrc": "915:40:2",
															"nodeType": "YulExpressionStatement",
															"src": "915:40:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "975:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "975:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "986:2:2",
																				"nodeType": "YulLiteral",
																				"src": "986:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "971:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "971:3:2"
																		},
																		"nativeSrc": "971:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "971:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nativeSrc": "1005:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1005:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "998:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "998:6:2"
																				},
																				"nativeSrc": "998:14:2",
																				"nodeType": "YulFunctionCall",
																				"src": "998:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "991:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "991:6:2"
																		},
																		"nativeSrc": "991:22:2",
																		"nodeType": "YulFunctionCall",
																		"src": "991:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "964:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "964:6:2"
																},
																"nativeSrc": "964:50:2",
																"nodeType": "YulFunctionCall",
																"src": "964:50:2"
															},
															"nativeSrc": "964:50:2",
															"nodeType": "YulExpressionStatement",
															"src": "964:50:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_int24_t_bool__to_t_int24_t_bool__fromStack_library_reversed",
												"nativeSrc": "743:277:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "831:9:2",
														"nodeType": "YulTypedName",
														"src": "831:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "842:6:2",
														"nodeType": "YulTypedName",
														"src": "842:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "850:6:2",
														"nodeType": "YulTypedName",
														"src": "850:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "861:4:2",
														"nodeType": "YulTypedName",
														"src": "861:4:2",
														"type": ""
													}
												],
												"src": "743:277:2"
											},
											{
												"body": {
													"nativeSrc": "1093:114:2",
													"nodeType": "YulBlock",
													"src": "1093:114:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1139:16:2",
																"nodeType": "YulBlock",
																"src": "1139:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1148:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1148:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1151:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1151:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1141:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1141:6:2"
																			},
																			"nativeSrc": "1141:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1141:12:2"
																		},
																		"nativeSrc": "1141:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1141:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1114:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1114:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1110:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1110:3:2"
																		},
																		"nativeSrc": "1110:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1110:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1135:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1135:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1106:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1106:3:2"
																},
																"nativeSrc": "1106:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1106:32:2"
															},
															"nativeSrc": "1103:52:2",
															"nodeType": "YulIf",
															"src": "1103:52:2"
														},
														{
															"nativeSrc": "1164:37:2",
															"nodeType": "YulAssignment",
															"src": "1164:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1191:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1191:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24",
																	"nativeSrc": "1174:16:2",
																	"nodeType": "YulIdentifier",
																	"src": "1174:16:2"
																},
																"nativeSrc": "1174:27:2",
																"nodeType": "YulFunctionCall",
																"src": "1174:27:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1164:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1164:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int24",
												"nativeSrc": "1025:182:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1059:9:2",
														"nodeType": "YulTypedName",
														"src": "1059:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1070:7:2",
														"nodeType": "YulTypedName",
														"src": "1070:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1082:6:2",
														"nodeType": "YulTypedName",
														"src": "1082:6:2",
														"type": ""
													}
												],
												"src": "1025:182:2"
											},
											{
												"body": {
													"nativeSrc": "1341:145:2",
													"nodeType": "YulBlock",
													"src": "1341:145:2",
													"statements": [
														{
															"nativeSrc": "1351:26:2",
															"nodeType": "YulAssignment",
															"src": "1351:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1363:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1363:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1374:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1374:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1359:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1359:3:2"
																},
																"nativeSrc": "1359:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1359:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1351:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1351:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1393:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1393:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1415:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1415:1:2",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "value0",
																				"nativeSrc": "1418:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1418:6:2"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "1404:10:2",
																			"nodeType": "YulIdentifier",
																			"src": "1404:10:2"
																		},
																		"nativeSrc": "1404:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1404:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1386:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1386:6:2"
																},
																"nativeSrc": "1386:40:2",
																"nodeType": "YulFunctionCall",
																"src": "1386:40:2"
															},
															"nativeSrc": "1386:40:2",
															"nodeType": "YulExpressionStatement",
															"src": "1386:40:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1446:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1446:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1457:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1457:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1442:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1442:3:2"
																		},
																		"nativeSrc": "1442:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1442:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1466:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1474:4:2",
																				"nodeType": "YulLiteral",
																				"src": "1474:4:2",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1462:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1462:3:2"
																		},
																		"nativeSrc": "1462:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1462:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1435:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1435:6:2"
																},
																"nativeSrc": "1435:45:2",
																"nodeType": "YulFunctionCall",
																"src": "1435:45:2"
															},
															"nativeSrc": "1435:45:2",
															"nodeType": "YulExpressionStatement",
															"src": "1435:45:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_int16_t_uint8__to_t_int16_t_uint8__fromStack_library_reversed",
												"nativeSrc": "1212:274:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1302:9:2",
														"nodeType": "YulTypedName",
														"src": "1302:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1313:6:2",
														"nodeType": "YulTypedName",
														"src": "1313:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1321:6:2",
														"nodeType": "YulTypedName",
														"src": "1321:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1332:4:2",
														"nodeType": "YulTypedName",
														"src": "1332:4:2",
														"type": ""
													}
												],
												"src": "1212:274:2"
											},
											{
												"body": {
													"nativeSrc": "1614:266:2",
													"nodeType": "YulBlock",
													"src": "1614:266:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1660:16:2",
																"nodeType": "YulBlock",
																"src": "1660:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1669:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1669:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1672:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1672:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1662:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1662:6:2"
																			},
																			"nativeSrc": "1662:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1662:12:2"
																		},
																		"nativeSrc": "1662:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1662:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1635:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1635:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1644:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1644:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1631:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1631:3:2"
																		},
																		"nativeSrc": "1631:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1656:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1627:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1627:3:2"
																},
																"nativeSrc": "1627:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1627:32:2"
															},
															"nativeSrc": "1624:52:2",
															"nodeType": "YulIf",
															"src": "1624:52:2"
														},
														{
															"nativeSrc": "1685:14:2",
															"nodeType": "YulVariableDeclaration",
															"src": "1685:14:2",
															"value": {
																"kind": "number",
																"nativeSrc": "1698:1:2",
																"nodeType": "YulLiteral",
																"src": "1698:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1689:5:2",
																	"nodeType": "YulTypedName",
																	"src": "1689:5:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1708:32:2",
															"nodeType": "YulAssignment",
															"src": "1708:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1730:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1730:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1717:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:2"
																},
																"nativeSrc": "1717:23:2",
																"nodeType": "YulFunctionCall",
																"src": "1717:23:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1708:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1708:5:2"
																}
															]
														},
														{
															"nativeSrc": "1749:15:2",
															"nodeType": "YulAssignment",
															"src": "1749:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "1759:5:2",
																"nodeType": "YulIdentifier",
																"src": "1759:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1749:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:2"
																}
															]
														},
														{
															"nativeSrc": "1773:46:2",
															"nodeType": "YulAssignment",
															"src": "1773:46:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1804:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1804:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1815:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1800:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1800:3:2"
																		},
																		"nativeSrc": "1800:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1800:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24",
																	"nativeSrc": "1783:16:2",
																	"nodeType": "YulIdentifier",
																	"src": "1783:16:2"
																},
																"nativeSrc": "1783:36:2",
																"nodeType": "YulFunctionCall",
																"src": "1783:36:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1773:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1773:6:2"
																}
															]
														},
														{
															"nativeSrc": "1828:46:2",
															"nodeType": "YulAssignment",
															"src": "1828:46:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1859:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1859:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1870:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1870:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1855:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1855:3:2"
																		},
																		"nativeSrc": "1855:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1855:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24",
																	"nativeSrc": "1838:16:2",
																	"nodeType": "YulIdentifier",
																	"src": "1838:16:2"
																},
																"nativeSrc": "1838:36:2",
																"nodeType": "YulFunctionCall",
																"src": "1838:36:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1828:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_mapping$_t_int16_$_t_uint256_$t_int24t_int24",
												"nativeSrc": "1491:389:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1564:9:2",
														"nodeType": "YulTypedName",
														"src": "1564:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1575:7:2",
														"nodeType": "YulTypedName",
														"src": "1575:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1587:6:2",
														"nodeType": "YulTypedName",
														"src": "1587:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1595:6:2",
														"nodeType": "YulTypedName",
														"src": "1595:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1603:6:2",
														"nodeType": "YulTypedName",
														"src": "1603:6:2",
														"type": ""
													}
												],
												"src": "1491:389:2"
											},
											{
												"body": {
													"nativeSrc": "1917:95:2",
													"nodeType": "YulBlock",
													"src": "1917:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1934:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1934:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1941:3:2",
																				"nodeType": "YulLiteral",
																				"src": "1941:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:10:2",
																				"nodeType": "YulLiteral",
																				"src": "1946:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1937:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1937:3:2"
																		},
																		"nativeSrc": "1937:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1937:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1927:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1927:6:2"
																},
																"nativeSrc": "1927:31:2",
																"nodeType": "YulFunctionCall",
																"src": "1927:31:2"
															},
															"nativeSrc": "1927:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "1927:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1974:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1974:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1977:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1977:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1967:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1967:6:2"
																},
																"nativeSrc": "1967:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1967:15:2"
															},
															"nativeSrc": "1967:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1967:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1998:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1998:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2001:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2001:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1991:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1991:6:2"
																},
																"nativeSrc": "1991:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1991:15:2"
															},
															"nativeSrc": "1991:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1991:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "1885:127:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1885:127:2"
											},
											{
												"body": {
													"nativeSrc": "2049:95:2",
													"nodeType": "YulBlock",
													"src": "2049:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2066:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2066:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2073:3:2",
																				"nodeType": "YulLiteral",
																				"src": "2073:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2078:10:2",
																				"nodeType": "YulLiteral",
																				"src": "2078:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2069:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:2"
																		},
																		"nativeSrc": "2069:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2059:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2059:6:2"
																},
																"nativeSrc": "2059:31:2",
																"nodeType": "YulFunctionCall",
																"src": "2059:31:2"
															},
															"nativeSrc": "2059:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "2059:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2106:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2106:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2109:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2109:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2099:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2099:6:2"
																},
																"nativeSrc": "2099:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2099:15:2"
															},
															"nativeSrc": "2099:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2099:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2130:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2130:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2133:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2123:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2123:6:2"
																},
																"nativeSrc": "2123:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2123:15:2"
															},
															"nativeSrc": "2123:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2123:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2017:127:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2017:127:2"
											},
											{
												"body": {
													"nativeSrc": "2193:231:2",
													"nodeType": "YulBlock",
													"src": "2193:231:2",
													"statements": [
														{
															"nativeSrc": "2203:27:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2203:27:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2225:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2225:1:2",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2228:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2228:1:2"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "2214:10:2",
																	"nodeType": "YulIdentifier",
																	"src": "2214:10:2"
																},
																"nativeSrc": "2214:16:2",
																"nodeType": "YulFunctionCall",
																"src": "2214:16:2"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nativeSrc": "2207:3:2",
																	"nodeType": "YulTypedName",
																	"src": "2207:3:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2239:27:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2239:27:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2261:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2261:1:2",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2264:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2264:1:2"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "2250:10:2",
																	"nodeType": "YulIdentifier",
																	"src": "2250:10:2"
																},
																"nativeSrc": "2250:16:2",
																"nodeType": "YulFunctionCall",
																"src": "2250:16:2"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nativeSrc": "2243:3:2",
																	"nodeType": "YulTypedName",
																	"src": "2243:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2290:22:2",
																"nodeType": "YulBlock",
																"src": "2290:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "2292:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2292:16:2"
																			},
																			"nativeSrc": "2292:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2292:18:2"
																		},
																		"nativeSrc": "2292:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2292:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nativeSrc": "2285:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2285:3:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2278:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2278:6:2"
																},
																"nativeSrc": "2278:11:2",
																"nodeType": "YulFunctionCall",
																"src": "2278:11:2"
															},
															"nativeSrc": "2275:37:2",
															"nodeType": "YulIf",
															"src": "2275:37:2"
														},
														{
															"body": {
																"nativeSrc": "2368:22:2",
																"nodeType": "YulBlock",
																"src": "2368:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2370:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2370:16:2"
																			},
																			"nativeSrc": "2370:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:18:2"
																		},
																		"nativeSrc": "2370:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x_1",
																				"nativeSrc": "2331:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "2331:3:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2340:7:2",
																						"nodeType": "YulLiteral",
																						"src": "2340:7:2",
																						"type": "",
																						"value": "8388607"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2336:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2336:3:2"
																				},
																				"nativeSrc": "2336:12:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2336:12:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2328:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "2328:2:2"
																		},
																		"nativeSrc": "2328:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2328:21:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y_1",
																				"nativeSrc": "2354:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "2354:3:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2363:1:2",
																						"nodeType": "YulLiteral",
																						"src": "2363:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2359:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2359:3:2"
																				},
																				"nativeSrc": "2359:6:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2359:6:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2351:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "2351:2:2"
																		},
																		"nativeSrc": "2351:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2351:15:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2324:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2324:3:2"
																},
																"nativeSrc": "2324:43:2",
																"nodeType": "YulFunctionCall",
																"src": "2324:43:2"
															},
															"nativeSrc": "2321:69:2",
															"nodeType": "YulIf",
															"src": "2321:69:2"
														},
														{
															"nativeSrc": "2399:19:2",
															"nodeType": "YulAssignment",
															"src": "2399:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nativeSrc": "2409:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2409:3:2"
																	},
																	{
																		"name": "y_1",
																		"nativeSrc": "2414:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2414:3:2"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nativeSrc": "2404:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2404:4:2"
																},
																"nativeSrc": "2404:14:2",
																"nodeType": "YulFunctionCall",
																"src": "2404:14:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2399:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2399:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int24",
												"nativeSrc": "2149:275:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2178:1:2",
														"nodeType": "YulTypedName",
														"src": "2178:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2181:1:2",
														"nodeType": "YulTypedName",
														"src": "2181:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2187:1:2",
														"nodeType": "YulTypedName",
														"src": "2187:1:2",
														"type": ""
													}
												],
												"src": "2149:275:2"
											},
											{
												"body": {
													"nativeSrc": "2465:130:2",
													"nodeType": "YulBlock",
													"src": "2465:130:2",
													"statements": [
														{
															"nativeSrc": "2475:27:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2475:27:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2497:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2497:1:2",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2500:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2500:1:2"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "2486:10:2",
																	"nodeType": "YulIdentifier",
																	"src": "2486:10:2"
																},
																"nativeSrc": "2486:16:2",
																"nodeType": "YulFunctionCall",
																"src": "2486:16:2"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nativeSrc": "2479:3:2",
																	"nodeType": "YulTypedName",
																	"src": "2479:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2526:22:2",
																"nodeType": "YulBlock",
																"src": "2526:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "2528:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2528:16:2"
																			},
																			"nativeSrc": "2528:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2528:18:2"
																		},
																		"nativeSrc": "2528:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2528:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nativeSrc": "2521:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2521:3:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2514:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2514:6:2"
																},
																"nativeSrc": "2514:11:2",
																"nodeType": "YulFunctionCall",
																"src": "2514:11:2"
															},
															"nativeSrc": "2511:37:2",
															"nodeType": "YulIf",
															"src": "2511:37:2"
														},
														{
															"nativeSrc": "2557:32:2",
															"nodeType": "YulAssignment",
															"src": "2557:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2578:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2578:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "x",
																				"nativeSrc": "2581:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "2581:1:2"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "2567:10:2",
																			"nodeType": "YulIdentifier",
																			"src": "2567:10:2"
																		},
																		"nativeSrc": "2567:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2567:16:2"
																	},
																	{
																		"name": "y_1",
																		"nativeSrc": "2585:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2585:3:2"
																	}
																],
																"functionName": {
																	"name": "smod",
																	"nativeSrc": "2562:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:2"
																},
																"nativeSrc": "2562:27:2",
																"nodeType": "YulFunctionCall",
																"src": "2562:27:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2557:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2557:1:2"
																}
															]
														}
													]
												},
												"name": "mod_t_int24",
												"nativeSrc": "2429:166:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2450:1:2",
														"nodeType": "YulTypedName",
														"src": "2450:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2453:1:2",
														"nodeType": "YulTypedName",
														"src": "2453:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2459:1:2",
														"nodeType": "YulTypedName",
														"src": "2459:1:2",
														"type": ""
													}
												],
												"src": "2429:166:2"
											},
											{
												"body": {
													"nativeSrc": "2645:147:2",
													"nodeType": "YulBlock",
													"src": "2645:147:2",
													"statements": [
														{
															"nativeSrc": "2655:35:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2655:35:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2681:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2681:1:2",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2684:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2684:5:2"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "2670:10:2",
																	"nodeType": "YulIdentifier",
																	"src": "2670:10:2"
																},
																"nativeSrc": "2670:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2670:20:2"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2659:7:2",
																	"nodeType": "YulTypedName",
																	"src": "2659:7:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2728:22:2",
																"nodeType": "YulBlock",
																"src": "2728:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2730:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2730:16:2"
																			},
																			"nativeSrc": "2730:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2730:18:2"
																		},
																		"nativeSrc": "2730:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2730:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2705:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "2705:7:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2718:7:2",
																				"nodeType": "YulLiteral",
																				"src": "2718:7:2",
																				"type": "",
																				"value": "8388607"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2714:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2714:3:2"
																		},
																		"nativeSrc": "2714:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2714:12:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2702:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "2702:2:2"
																},
																"nativeSrc": "2702:25:2",
																"nodeType": "YulFunctionCall",
																"src": "2702:25:2"
															},
															"nativeSrc": "2699:51:2",
															"nodeType": "YulIf",
															"src": "2699:51:2"
														},
														{
															"nativeSrc": "2759:27:2",
															"nodeType": "YulAssignment",
															"src": "2759:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2770:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "2770:7:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2783:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2783:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2779:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:2"
																		},
																		"nativeSrc": "2779:6:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2766:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2766:3:2"
																},
																"nativeSrc": "2766:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2766:20:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2759:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2759:3:2"
																}
															]
														}
													]
												},
												"name": "decrement_t_int24",
												"nativeSrc": "2600:192:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2627:5:2",
														"nodeType": "YulTypedName",
														"src": "2627:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2637:3:2",
														"nodeType": "YulTypedName",
														"src": "2637:3:2",
														"type": ""
													}
												],
												"src": "2600:192:2"
											},
											{
												"body": {
													"nativeSrc": "2846:79:2",
													"nodeType": "YulBlock",
													"src": "2846:79:2",
													"statements": [
														{
															"nativeSrc": "2856:17:2",
															"nodeType": "YulAssignment",
															"src": "2856:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2868:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2868:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2871:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2871:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2864:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2864:3:2"
																},
																"nativeSrc": "2864:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2864:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2856:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2856:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2897:22:2",
																"nodeType": "YulBlock",
																"src": "2897:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2899:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2899:16:2"
																			},
																			"nativeSrc": "2899:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2899:18:2"
																		},
																		"nativeSrc": "2899:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2899:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2888:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "2888:4:2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2894:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2894:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2885:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "2885:2:2"
																},
																"nativeSrc": "2885:11:2",
																"nodeType": "YulFunctionCall",
																"src": "2885:11:2"
															},
															"nativeSrc": "2882:37:2",
															"nodeType": "YulIf",
															"src": "2882:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2797:128:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2828:1:2",
														"nodeType": "YulTypedName",
														"src": "2828:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2831:1:2",
														"nodeType": "YulTypedName",
														"src": "2831:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2837:4:2",
														"nodeType": "YulTypedName",
														"src": "2837:4:2",
														"type": ""
													}
												],
												"src": "2797:128:2"
											},
											{
												"body": {
													"nativeSrc": "2978:77:2",
													"nodeType": "YulBlock",
													"src": "2978:77:2",
													"statements": [
														{
															"nativeSrc": "2988:16:2",
															"nodeType": "YulAssignment",
															"src": "2988:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2999:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2999:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3002:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3002:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2995:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2995:3:2"
																},
																"nativeSrc": "2995:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2995:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2988:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2988:3:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3027:22:2",
																"nodeType": "YulBlock",
																"src": "3027:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3029:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3029:16:2"
																			},
																			"nativeSrc": "3029:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3029:18:2"
																		},
																		"nativeSrc": "3029:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3029:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3019:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3019:1:2"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3022:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3022:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3016:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "3016:2:2"
																},
																"nativeSrc": "3016:10:2",
																"nodeType": "YulFunctionCall",
																"src": "3016:10:2"
															},
															"nativeSrc": "3013:36:2",
															"nodeType": "YulIf",
															"src": "3013:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2930:125:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2961:1:2",
														"nodeType": "YulTypedName",
														"src": "2961:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2964:1:2",
														"nodeType": "YulTypedName",
														"src": "2964:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2970:3:2",
														"nodeType": "YulTypedName",
														"src": "2970:3:2",
														"type": ""
													}
												],
												"src": "2930:125:2"
											},
											{
												"body": {
													"nativeSrc": "3107:146:2",
													"nodeType": "YulBlock",
													"src": "3107:146:2",
													"statements": [
														{
															"nativeSrc": "3117:47:2",
															"nodeType": "YulAssignment",
															"src": "3117:47:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3140:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3140:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "x",
																				"nativeSrc": "3143:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "3143:1:2"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "3129:10:2",
																			"nodeType": "YulIdentifier",
																			"src": "3129:10:2"
																		},
																		"nativeSrc": "3129:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3129:16:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3158:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3158:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3161:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "3161:1:2"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "3147:10:2",
																			"nodeType": "YulIdentifier",
																			"src": "3147:10:2"
																		},
																		"nativeSrc": "3147:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3147:16:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3125:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3125:3:2"
																},
																"nativeSrc": "3125:39:2",
																"nodeType": "YulFunctionCall",
																"src": "3125:39:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3117:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3117:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3225:22:2",
																"nodeType": "YulBlock",
																"src": "3225:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3227:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3227:16:2"
																			},
																			"nativeSrc": "3227:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3227:18:2"
																		},
																		"nativeSrc": "3227:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3227:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "diff",
																				"nativeSrc": "3183:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "3183:4:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3193:7:2",
																						"nodeType": "YulLiteral",
																						"src": "3193:7:2",
																						"type": "",
																						"value": "8388607"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3189:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3189:3:2"
																				},
																				"nativeSrc": "3189:12:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3189:12:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3179:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3179:3:2"
																		},
																		"nativeSrc": "3179:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3179:23:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "diff",
																				"nativeSrc": "3208:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "3208:4:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3214:8:2",
																				"nodeType": "YulLiteral",
																				"src": "3214:8:2",
																				"type": "",
																				"value": "0x7fffff"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nativeSrc": "3204:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3204:3:2"
																		},
																		"nativeSrc": "3204:19:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3204:19:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3176:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "3176:2:2"
																},
																"nativeSrc": "3176:48:2",
																"nodeType": "YulFunctionCall",
																"src": "3176:48:2"
															},
															"nativeSrc": "3173:74:2",
															"nodeType": "YulIf",
															"src": "3173:74:2"
														}
													]
												},
												"name": "checked_sub_t_int24",
												"nativeSrc": "3060:193:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3089:1:2",
														"nodeType": "YulTypedName",
														"src": "3089:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3092:1:2",
														"nodeType": "YulTypedName",
														"src": "3092:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3098:4:2",
														"nodeType": "YulTypedName",
														"src": "3098:4:2",
														"type": ""
													}
												],
												"src": "3060:193:2"
											},
											{
												"body": {
													"nativeSrc": "3308:187:2",
													"nodeType": "YulBlock",
													"src": "3308:187:2",
													"statements": [
														{
															"nativeSrc": "3318:58:2",
															"nodeType": "YulVariableDeclaration",
															"src": "3318:58:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3352:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3352:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "x",
																				"nativeSrc": "3355:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "3355:1:2"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "3341:10:2",
																			"nodeType": "YulIdentifier",
																			"src": "3341:10:2"
																		},
																		"nativeSrc": "3341:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3341:16:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3370:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3370:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3373:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "3373:1:2"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "3359:10:2",
																			"nodeType": "YulIdentifier",
																			"src": "3359:10:2"
																		},
																		"nativeSrc": "3359:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3359:16:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3337:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3337:3:2"
																},
																"nativeSrc": "3337:39:2",
																"nodeType": "YulFunctionCall",
																"src": "3337:39:2"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "3322:11:2",
																	"nodeType": "YulTypedName",
																	"src": "3322:11:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3385:37:2",
															"nodeType": "YulAssignment",
															"src": "3385:37:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3407:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3407:1:2",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "product_raw",
																		"nativeSrc": "3410:11:2",
																		"nodeType": "YulIdentifier",
																		"src": "3410:11:2"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "3396:10:2",
																	"nodeType": "YulIdentifier",
																	"src": "3396:10:2"
																},
																"nativeSrc": "3396:26:2",
																"nodeType": "YulFunctionCall",
																"src": "3396:26:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3385:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "3385:7:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3467:22:2",
																"nodeType": "YulBlock",
																"src": "3467:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3469:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3469:16:2"
																			},
																			"nativeSrc": "3469:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3469:18:2"
																		},
																		"nativeSrc": "3469:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3469:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nativeSrc": "3444:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3444:7:2"
																			},
																			{
																				"name": "product_raw",
																				"nativeSrc": "3453:11:2",
																				"nodeType": "YulIdentifier",
																				"src": "3453:11:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3441:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "3441:2:2"
																		},
																		"nativeSrc": "3441:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:24:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3434:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3434:6:2"
																},
																"nativeSrc": "3434:32:2",
																"nodeType": "YulFunctionCall",
																"src": "3434:32:2"
															},
															"nativeSrc": "3431:58:2",
															"nodeType": "YulIf",
															"src": "3431:58:2"
														}
													]
												},
												"name": "checked_mul_t_int24",
												"nativeSrc": "3258:237:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3287:1:2",
														"nodeType": "YulTypedName",
														"src": "3287:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3290:1:2",
														"nodeType": "YulTypedName",
														"src": "3290:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3296:7:2",
														"nodeType": "YulTypedName",
														"src": "3296:7:2",
														"type": ""
													}
												],
												"src": "3258:237:2"
											},
											{
												"body": {
													"nativeSrc": "3547:104:2",
													"nodeType": "YulBlock",
													"src": "3547:104:2",
													"statements": [
														{
															"nativeSrc": "3557:39:2",
															"nodeType": "YulAssignment",
															"src": "3557:39:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3573:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "3573:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3576:4:2",
																				"nodeType": "YulLiteral",
																				"src": "3576:4:2",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3569:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3569:3:2"
																		},
																		"nativeSrc": "3569:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3569:12:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "3587:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "3587:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3590:4:2",
																				"nodeType": "YulLiteral",
																				"src": "3590:4:2",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3583:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3583:3:2"
																		},
																		"nativeSrc": "3583:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3583:12:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3565:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3565:3:2"
																},
																"nativeSrc": "3565:31:2",
																"nodeType": "YulFunctionCall",
																"src": "3565:31:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3557:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3557:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3623:22:2",
																"nodeType": "YulBlock",
																"src": "3623:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3625:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3625:16:2"
																			},
																			"nativeSrc": "3625:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3625:18:2"
																		},
																		"nativeSrc": "3625:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3625:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3611:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "3611:4:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3617:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3617:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3608:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "3608:2:2"
																},
																"nativeSrc": "3608:14:2",
																"nodeType": "YulFunctionCall",
																"src": "3608:14:2"
															},
															"nativeSrc": "3605:40:2",
															"nodeType": "YulIf",
															"src": "3605:40:2"
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nativeSrc": "3500:151:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3529:1:2",
														"nodeType": "YulTypedName",
														"src": "3529:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3532:1:2",
														"nodeType": "YulTypedName",
														"src": "3532:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3538:4:2",
														"nodeType": "YulTypedName",
														"src": "3538:4:2",
														"type": ""
													}
												],
												"src": "3500:151:2"
											},
											{
												"body": {
													"nativeSrc": "3702:143:2",
													"nodeType": "YulBlock",
													"src": "3702:143:2",
													"statements": [
														{
															"nativeSrc": "3712:46:2",
															"nodeType": "YulAssignment",
															"src": "3712:46:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3734:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3734:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "x",
																				"nativeSrc": "3737:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "3737:1:2"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "3723:10:2",
																			"nodeType": "YulIdentifier",
																			"src": "3723:10:2"
																		},
																		"nativeSrc": "3723:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3723:16:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3752:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3752:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3755:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "3755:1:2"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nativeSrc": "3741:10:2",
																			"nodeType": "YulIdentifier",
																			"src": "3741:10:2"
																		},
																		"nativeSrc": "3741:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3741:16:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3719:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3719:3:2"
																},
																"nativeSrc": "3719:39:2",
																"nodeType": "YulFunctionCall",
																"src": "3719:39:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3712:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3817:22:2",
																"nodeType": "YulBlock",
																"src": "3817:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3819:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3819:16:2"
																			},
																			"nativeSrc": "3819:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3819:18:2"
																		},
																		"nativeSrc": "3819:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3819:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sum",
																				"nativeSrc": "3777:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "3777:3:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:8:2",
																				"nodeType": "YulLiteral",
																				"src": "3782:8:2",
																				"type": "",
																				"value": "0x7fffff"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nativeSrc": "3773:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3773:3:2"
																		},
																		"nativeSrc": "3773:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3773:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "sum",
																				"nativeSrc": "3797:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "3797:3:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3806:7:2",
																						"nodeType": "YulLiteral",
																						"src": "3806:7:2",
																						"type": "",
																						"value": "8388607"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3802:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3802:3:2"
																				},
																				"nativeSrc": "3802:12:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3802:12:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3793:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3793:3:2"
																		},
																		"nativeSrc": "3793:22:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3793:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3770:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "3770:2:2"
																},
																"nativeSrc": "3770:46:2",
																"nodeType": "YulFunctionCall",
																"src": "3770:46:2"
															},
															"nativeSrc": "3767:72:2",
															"nodeType": "YulIf",
															"src": "3767:72:2"
														}
													]
												},
												"name": "checked_add_t_int24",
												"nativeSrc": "3656:189:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3685:1:2",
														"nodeType": "YulTypedName",
														"src": "3685:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3688:1:2",
														"nodeType": "YulTypedName",
														"src": "3688:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3694:3:2",
														"nodeType": "YulTypedName",
														"src": "3694:3:2",
														"type": ""
													}
												],
												"src": "3656:189:2"
											},
											{
												"body": {
													"nativeSrc": "3896:102:2",
													"nodeType": "YulBlock",
													"src": "3896:102:2",
													"statements": [
														{
															"nativeSrc": "3906:38:2",
															"nodeType": "YulAssignment",
															"src": "3906:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3921:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "3921:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3924:4:2",
																				"nodeType": "YulLiteral",
																				"src": "3924:4:2",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3917:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:2"
																		},
																		"nativeSrc": "3917:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3917:12:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "3935:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "3935:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3938:4:2",
																				"nodeType": "YulLiteral",
																				"src": "3938:4:2",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3931:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3931:3:2"
																		},
																		"nativeSrc": "3931:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3931:12:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3913:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3913:3:2"
																},
																"nativeSrc": "3913:31:2",
																"nodeType": "YulFunctionCall",
																"src": "3913:31:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3906:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3906:3:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3970:22:2",
																"nodeType": "YulBlock",
																"src": "3970:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3972:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3972:16:2"
																			},
																			"nativeSrc": "3972:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3972:18:2"
																		},
																		"nativeSrc": "3972:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3972:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "3959:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3959:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3964:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3964:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3956:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "3956:2:2"
																},
																"nativeSrc": "3956:13:2",
																"nodeType": "YulFunctionCall",
																"src": "3956:13:2"
															},
															"nativeSrc": "3953:39:2",
															"nodeType": "YulIf",
															"src": "3953:39:2"
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nativeSrc": "3850:148:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3879:1:2",
														"nodeType": "YulTypedName",
														"src": "3879:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3882:1:2",
														"nodeType": "YulTypedName",
														"src": "3882:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3888:3:2",
														"nodeType": "YulTypedName",
														"src": "3888:3:2",
														"type": ""
													}
												],
												"src": "3850:148:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_int24(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, signextend(2, value))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_mapping$_t_int16_$_t_uint256_$t_int24t_int24t_bool(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_int24(add(headStart, 32))\n        value2 := abi_decode_int24(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_int24_t_bool__to_t_int24_t_bool__fromStack_library_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, signextend(2, value0))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_decode_tuple_t_int24(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_int24(headStart)\n    }\n    function abi_encode_tuple_t_int16_t_uint8__to_t_int16_t_uint8__fromStack_library_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, signextend(1, value0))\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_decode_tuple_t_mapping$_t_int16_$_t_uint256_$t_int24t_int24(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_int24(add(headStart, 32))\n        value2 := abi_decode_int24(add(headStart, 64))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_int24(x, y) -> r\n    {\n        let x_1 := signextend(2, x)\n        let y_1 := signextend(2, y)\n        if iszero(y_1) { panic_error_0x12() }\n        if and(eq(x_1, not(8388607)), eq(y_1, not(0))) { panic_error_0x11() }\n        r := sdiv(x_1, y_1)\n    }\n    function mod_t_int24(x, y) -> r\n    {\n        let y_1 := signextend(2, y)\n        if iszero(y_1) { panic_error_0x12() }\n        r := smod(signextend(2, x), y_1)\n    }\n    function decrement_t_int24(value) -> ret\n    {\n        let value_1 := signextend(2, value)\n        if eq(value_1, not(8388607)) { panic_error_0x11() }\n        ret := add(value_1, not(0))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_int24(x, y) -> diff\n    {\n        diff := sub(signextend(2, x), signextend(2, y))\n        if or(slt(diff, not(8388607)), sgt(diff, 0x7fffff)) { panic_error_0x11() }\n    }\n    function checked_mul_t_int24(x, y) -> product\n    {\n        let product_raw := mul(signextend(2, x), signextend(2, y))\n        product := signextend(2, product_raw)\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function checked_add_t_int24(x, y) -> sum\n    {\n        sum := add(signextend(2, x), signextend(2, y))\n        if or(sgt(sum, 0x7fffff), slt(sum, not(8388607))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063120b7ff9146100505780633e7b7779146100825780639c4bba91146100b1575b600080fd5b61006361005e366004610539565b6100d3565b6040805160029390930b83529015156020830152015b60405180910390f35b61009561009036600461058d565b61028b565b6040805160019390930b835260ff909116602083015201610079565b8180156100bd57600080fd5b506100d16100cc3660046105af565b6102a8565b005b600080806100e18587610617565b905060008660020b12801561010157506100fb8587610651565b60020b15155b15610114578061011081610673565b9150505b83156101c1576000806101268361028b565b90925090506000600160ff831681901b906101419082610696565b61014b91906106af565b600184900b600090815260208c90526040902054811680151596509091508561018b578861017c60ff8516876106c2565b61018691906106e7565b6101b6565b88610195826102fb565b61019f908561070e565b6101ac9060ff16876106c2565b6101b691906106e7565b965050505050610281565b6000806101d2610090846001610727565b909250905060006101ea600160ff841681901b610696565b600184900b600090815260208c905260409020549019908116801515965090915085610243578861021c8460ff61070e565b60ff1661022a876001610727565b6102349190610727565b61023e91906106e7565b61027a565b888361024e836103f3565b610258919061070e565b60ff16610266876001610727565b6102709190610727565b61027a91906106e7565b9650505050505b5094509492505050565b600281900b60081d60006102a161010084610651565b9050915091565b6102b28183610651565b60020b156102bf57600080fd5b6000806102cf6100908486610617565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b600080821161030957600080fd5b600160801b821061032757608091821c91610324908261074c565b90505b68010000000000000000821061034a57604091821c91610347908261074c565b90505b640100000000821061036957602091821c91610366908261074c565b90505b62010000821061038657601091821c91610383908261074c565b90505b61010082106103a257600891821c9161039f908261074c565b90505b601082106103bd57600491821c916103ba908261074c565b90505b600482106103d857600291821c916103d5908261074c565b90505b600282106103ee576103eb60018261074c565b90505b919050565b600080821161040157600080fd5b5060ff6fffffffffffffffffffffffffffffffff82161561042e5761042760808261070e565b9050610436565b608082901c91505b67ffffffffffffffff8216156104585761045160408261070e565b9050610460565b604082901c91505b63ffffffff82161561047e5761047760208261070e565b9050610486565b602082901c91505b61ffff8216156104a25761049b60108261070e565b90506104aa565b601082901c91505b60ff8216156104c5576104be60088261070e565b90506104cd565b600882901c91505b600f8216156104e8576104e160048261070e565b90506104f0565b600482901c91505b600382161561050b5761050460028261070e565b9050610513565b600282901c91505b60018216156103ee576103eb60018261070e565b8035600281900b81146103ee57600080fd5b6000806000806080858703121561054f57600080fd5b8435935061055f60208601610527565b925061056d60408601610527565b91506060850135801515811461058257600080fd5b939692955090935050565b60006020828403121561059f57600080fd5b6105a882610527565b9392505050565b6000806000606084860312156105c457600080fd5b833592506105d460208501610527565b91506105e260408501610527565b90509250925092565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160020b8360020b8061062e5761062e6105eb565b627fffff1982146000198214161561064857610648610601565b90059392505050565b60008260020b80610664576106646105eb565b808360020b0791505092915050565b60008160020b627fffff19810361068c5761068c610601565b6000190192915050565b818103818111156106a9576106a9610601565b92915050565b808201808211156106a9576106a9610601565b600282810b9082900b03627fffff198112627fffff821317156106a9576106a9610601565b60008260020b8260020b028060020b915080821461070757610707610601565b5092915050565b60ff82811682821603908111156106a9576106a9610601565b600281810b9083900b01627fffff8113627fffff19821217156106a9576106a9610601565b60ff81811683821601908111156106a9576106a961060156fea26469706673582212209ee4d7a7ac053e6201ad25e14019fe81848cd0a9c3797c00f1fd07b7a2ccab7264736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x120B7FF9 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x3E7B7779 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x9C4BBA91 EQ PUSH2 0xB1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x539 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 SWAP4 SWAP1 SWAP4 SIGNEXTEND DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 SWAP4 SWAP1 SWAP4 SIGNEXTEND DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x79 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xE1 DUP6 DUP8 PUSH2 0x617 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x2 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x101 JUMPI POP PUSH2 0xFB DUP6 DUP8 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x114 JUMPI DUP1 PUSH2 0x110 DUP2 PUSH2 0x673 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP4 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 PUSH2 0x126 DUP4 PUSH2 0x28B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF DUP4 AND DUP2 SWAP1 SHL SWAP1 PUSH2 0x141 SWAP1 DUP3 PUSH2 0x696 JUMP JUMPDEST PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x1 DUP5 SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP13 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 AND DUP1 ISZERO ISZERO SWAP7 POP SWAP1 SWAP2 POP DUP6 PUSH2 0x18B JUMPI DUP9 PUSH2 0x17C PUSH1 0xFF DUP6 AND DUP8 PUSH2 0x6C2 JUMP JUMPDEST PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x1B6 JUMP JUMPDEST DUP9 PUSH2 0x195 DUP3 PUSH2 0x2FB JUMP JUMPDEST PUSH2 0x19F SWAP1 DUP6 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x1AC SWAP1 PUSH1 0xFF AND DUP8 PUSH2 0x6C2 JUMP JUMPDEST PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x6E7 JUMP JUMPDEST SWAP7 POP POP POP POP POP PUSH2 0x281 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D2 PUSH2 0x90 DUP5 PUSH1 0x1 PUSH2 0x727 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x1EA PUSH1 0x1 PUSH1 0xFF DUP5 AND DUP2 SWAP1 SHL PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 DUP5 SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP13 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 NOT SWAP1 DUP2 AND DUP1 ISZERO ISZERO SWAP7 POP SWAP1 SWAP2 POP DUP6 PUSH2 0x243 JUMPI DUP9 PUSH2 0x21C DUP5 PUSH1 0xFF PUSH2 0x70E JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x22A DUP8 PUSH1 0x1 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST DUP9 DUP4 PUSH2 0x24E DUP4 PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x70E JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x266 DUP8 PUSH1 0x1 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x6E7 JUMP JUMPDEST SWAP7 POP POP POP POP POP JUMPDEST POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND PUSH1 0x8 SAR PUSH1 0x0 PUSH2 0x2A1 PUSH2 0x100 DUP5 PUSH2 0x651 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x2B2 DUP2 DUP4 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CF PUSH2 0x90 DUP5 DUP7 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x1 SWAP2 DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x40 SWAP1 SWAP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP8 AND SWAP2 SWAP1 SWAP2 SHL SWAP1 SWAP6 XOR SWAP1 SWAP5 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x327 JUMPI PUSH1 0x80 SWAP2 DUP3 SHR SWAP2 PUSH2 0x324 SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x34A JUMPI PUSH1 0x40 SWAP2 DUP3 SHR SWAP2 PUSH2 0x347 SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x369 JUMPI PUSH1 0x20 SWAP2 DUP3 SHR SWAP2 PUSH2 0x366 SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x386 JUMPI PUSH1 0x10 SWAP2 DUP3 SHR SWAP2 PUSH2 0x383 SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x3A2 JUMPI PUSH1 0x8 SWAP2 DUP3 SHR SWAP2 PUSH2 0x39F SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x3BD JUMPI PUSH1 0x4 SWAP2 DUP3 SHR SWAP2 PUSH2 0x3BA SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x3D8 JUMPI PUSH1 0x2 SWAP2 DUP3 SHR SWAP2 PUSH2 0x3D5 SWAP1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x3EE JUMPI PUSH2 0x3EB PUSH1 0x1 DUP3 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0x42E JUMPI PUSH2 0x427 PUSH1 0x80 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x436 JUMP JUMPDEST PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0x458 JUMPI PUSH2 0x451 PUSH1 0x40 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND ISZERO PUSH2 0x47E JUMPI PUSH2 0x477 PUSH1 0x20 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x486 JUMP JUMPDEST PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH2 0xFFFF DUP3 AND ISZERO PUSH2 0x4A2 JUMPI PUSH2 0x49B PUSH1 0x10 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x4C5 JUMPI PUSH2 0x4BE PUSH1 0x8 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0xF DUP3 AND ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4E1 PUSH1 0x4 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0x3 DUP3 AND ISZERO PUSH2 0x50B JUMPI PUSH2 0x504 PUSH1 0x2 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x513 JUMP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x3EE JUMPI PUSH2 0x3EB PUSH1 0x1 DUP3 PUSH2 0x70E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x55F PUSH1 0x20 DUP7 ADD PUSH2 0x527 JUMP JUMPDEST SWAP3 POP PUSH2 0x56D PUSH1 0x40 DUP7 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A8 DUP3 PUSH2 0x527 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x5D4 PUSH1 0x20 DUP6 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP PUSH2 0x5E2 PUSH1 0x40 DUP6 ADD PUSH2 0x527 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x2 SIGNEXTEND DUP1 PUSH2 0x62E JUMPI PUSH2 0x62E PUSH2 0x5EB JUMP JUMPDEST PUSH3 0x7FFFFF NOT DUP3 EQ PUSH1 0x0 NOT DUP3 EQ AND ISZERO PUSH2 0x648 JUMPI PUSH2 0x648 PUSH2 0x601 JUMP JUMPDEST SWAP1 SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 SIGNEXTEND DUP1 PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x5EB JUMP JUMPDEST DUP1 DUP4 PUSH1 0x2 SIGNEXTEND SMOD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND PUSH3 0x7FFFFF NOT DUP2 SUB PUSH2 0x68C JUMPI PUSH2 0x68C PUSH2 0x601 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x601 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x601 JUMP JUMPDEST PUSH1 0x2 DUP3 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SUB PUSH3 0x7FFFFF NOT DUP2 SLT PUSH3 0x7FFFFF DUP3 SGT OR ISZERO PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x601 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND MUL DUP1 PUSH1 0x2 SIGNEXTEND SWAP2 POP DUP1 DUP3 EQ PUSH2 0x707 JUMPI PUSH2 0x707 PUSH2 0x601 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x601 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND ADD PUSH3 0x7FFFFF DUP2 SGT PUSH3 0x7FFFFF NOT DUP3 SLT OR ISZERO PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x601 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x601 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xE4 0xD7 0xA7 0xAC SDIV RETURNDATACOPY PUSH3 0x1AD25 0xE1 BLOCKHASH NOT INVALID DUP2 DUP5 DUP13 0xD0 0xA9 0xC3 PUSH26 0x7C00F1FD07B7A2CCAB7264736F6C634300081A00330000000000 ",
							"sourceMap": "339:3888:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:1990;;;;;;:::i;:::-;;:::i;:::-;;;;944:1:2;933:21;;;;915:40;;998:14;;991:22;986:2;971:18;;964:50;888:18;2234:1990:1;;;;;;;;699:170;;;;;;:::i;:::-;;:::i;:::-;;;;1415:1:2;1404:21;;;;1386:40;;1474:4;1462:17;;;1457:2;1442:18;;1435:45;1359:18;699:170:1;1212:274:2;1131:355:1;;;;;;;;;;-1:-1:-1;1131:355:1;;;;;:::i;:::-;;:::i;:::-;;2234:1990;2421:10;;;2481:18;2488:11;2481:4;:18;:::i;:::-;2462:37;;2521:1;2514:4;:8;;;:35;;;;-1:-1:-1;2526:18:1;2533:11;2526:4;:18;:::i;:::-;:23;;;;2514:35;2510:53;;;2551:12;;;;:::i;:::-;;;;2510:53;2615:3;2611:1606;;;2636:13;2651:12;2667:20;2676:10;2667:8;:20::i;:::-;2635:52;;-1:-1:-1;2635:52:1;-1:-1:-1;2770:12:1;2806:1;:11;;;;;;;2785:17;;2806:11;2785:17;:::i;:::-;:33;;;;:::i;:::-;2850:13;;;;2833:14;2850:13;;;;;;;;;;;:20;;3020:11;;;;-1:-1:-1;2770:48:1;;-1:-1:-1;3020:11:1;3164:188;;3341:11;3303:34;3322:14;;;3303:10;:34;:::i;:::-;3302:50;;;;:::i;:::-;3164:188;;;3271:11;3231:34;3258:6;3231:26;:34::i;:::-;3222:43;;:6;:43;:::i;:::-;3196:71;;3215:51;;3196:10;:71;:::i;:::-;3195:87;;;;:::i;:::-;3157:195;;2620:744;;;;2611:1606;;;3484:13;;3515:24;3524:14;:10;3537:1;3524:14;:::i;3515:24::-;3483:56;;-1:-1:-1;3483:56:1;-1:-1:-1;3613:12:1;3630:17;3646:1;3631:11;;;;;;3630:17;:::i;:::-;3680:13;;;;3663:14;3680:13;;;;;;;;;;;3628:20;;3680;;;3842:11;;;;-1:-1:-1;3628:20:1;;-1:-1:-1;3842:11:1;3986:219;;4194:11;4163:24;4181:6;4163:15;:24;:::i;:::-;4155:34;;4132:14;:10;4145:1;4132:14;:::i;:::-;:58;;;;:::i;:::-;4131:74;;;;:::i;:::-;3986:219;;;4100:11;4087:6;4049:35;4077:6;4049:27;:35::i;:::-;:44;;;;:::i;:::-;4041:54;;4018:14;:10;4031:1;4018:14;:::i;:::-;:78;;;;:::i;:::-;4017:94;;;;:::i;:::-;3979:226;;3370:847;;;;2611:1606;2451:1773;2234:1990;;;;;;;:::o;699:170::-;806:9;;;;814:1;806:9;750:13;849:10;856:3;806:4;849:10;:::i;:::-;827:34;;699:170;;;:::o;1131:355::-;1280:18;1287:11;1280:4;:18;:::i;:::-;:23;;;1272:32;;;;;;1350:13;;1381:28;1390:18;1397:11;1390:4;:18;:::i;1381:28::-;1435:1;1457:13;;;1420:12;1457:13;;;;;;;;;;;;:21;;1435:11;;;;;;;;1457:21;;;;;;-1:-1:-1;;;;1131:355:1:o;683:763:0:-;745:7;777:1;773;:5;765:14;;;;;;-1:-1:-1;;;796:1:0;:40;792:105;;859:3;853:9;;;;877:8;;;;:::i;:::-;;;792:105;916:19;911:1;:24;907:87;;958:2;952:8;;;;975:7;;;;:::i;:::-;;;907:87;1013:11;1008:1;:16;1004:79;;1047:2;1041:8;;;;1064:7;;;;:::i;:::-;;;1004:79;1102:7;1097:1;:12;1093:75;;1132:2;1126:8;;;;1149:7;;;;:::i;:::-;;;1093:75;1187:5;1182:1;:10;1178:71;;1215:1;1209:7;;;;1231:6;;;;:::i;:::-;;;1178:71;1268:4;1263:1;:9;1259:70;;1295:1;1289:7;;;;1311:6;;;;:::i;:::-;;;1259:70;1348:3;1343:1;:8;1339:69;;1374:1;1368:7;;;;1390:6;;;;:::i;:::-;;;1339:69;1427:3;1422:1;:8;1418:20;;1432:6;1437:1;1432:6;;:::i;:::-;;;1418:20;683:763;;;:::o;1945:934::-;2008:7;2040:1;2036;:5;2028:14;;;;;;-1:-1:-1;2059:3:0;2081:17;2077:21;;:25;2073:108;;2119:8;2124:3;2119:8;;:::i;:::-;;;2073:108;;;2166:3;2160:9;;;;;2073:108;2199:16;2195:20;;:24;2191:105;;2236:7;2241:2;2236:7;;:::i;:::-;;;2191:105;;;2282:2;2276:8;;;;;2191:105;2314:16;2310:20;;:24;2306:105;;2351:7;2356:2;2351:7;;:::i;:::-;;;2306:105;;;2397:2;2391:8;;;;;2306:105;2429:16;2425:20;;:24;2421:105;;2466:7;2471:2;2466:7;;:::i;:::-;;;2421:105;;;2512:2;2506:8;;;;;2421:105;2544:15;2540:19;;:23;2536:102;;2580:6;2585:1;2580:6;;:::i;:::-;;;2536:102;;;2625:1;2619:7;;;;;2536:102;2656:3;2652:7;;:11;2648:90;;2680:6;2685:1;2680:6;;:::i;:::-;;;2648:90;;;2725:1;2719:7;;;;;2648:90;2756:3;2752:7;;:11;2748:90;;2780:6;2785:1;2780:6;;:::i;:::-;;;2748:90;;;2825:1;2819:7;;;;;2748:90;2856:3;2852:7;;:11;2848:23;;2865:6;2870:1;2865:6;;:::i;14:160:2:-;80:20;;140:1;129:20;;;119:31;;109:59;;164:1;161;154:12;179:559;281:6;289;297;305;358:3;346:9;337:7;333:23;329:33;326:53;;;375:1;372;365:12;326:53;420:23;;;-1:-1:-1;486:36:2;518:2;503:18;;486:36;:::i;:::-;476:46;;541:36;573:2;562:9;558:18;541:36;:::i;:::-;531:46;;629:2;618:9;614:18;601:32;678:7;671:15;664:23;655:7;652:36;642:64;;702:1;699;692:12;642:64;179:559;;;;-1:-1:-1;179:559:2;;-1:-1:-1;;179:559:2:o;1025:182::-;1082:6;1135:2;1123:9;1114:7;1110:23;1106:32;1103:52;;;1151:1;1148;1141:12;1103:52;1174:27;1191:9;1174:27;:::i;:::-;1164:37;1025:182;-1:-1:-1;;;1025:182:2:o;1491:389::-;1587:6;1595;1603;1656:2;1644:9;1635:7;1631:23;1627:32;1624:52;;;1672:1;1669;1662:12;1624:52;1717:23;;;-1:-1:-1;1783:36:2;1815:2;1800:18;;1783:36;:::i;:::-;1773:46;;1838:36;1870:2;1859:9;1855:18;1838:36;:::i;:::-;1828:46;;1491:389;;;;;:::o;1885:127::-;1946:10;1941:3;1937:20;1934:1;1927:31;1977:4;1974:1;1967:15;2001:4;1998:1;1991:15;2017:127;2078:10;2073:3;2069:20;2066:1;2059:31;2109:4;2106:1;2099:15;2133:4;2130:1;2123:15;2149:275;2187:1;2228;2225;2214:16;2264:1;2261;2250:16;2285:3;2275:37;;2292:18;;:::i;:::-;-1:-1:-1;;2328:21:2;;-1:-1:-1;;2351:15:2;;2324:43;2321:69;;;2370:18;;:::i;:::-;2404:14;;;2149:275;-1:-1:-1;;;2149:275:2:o;2429:166::-;2459:1;2500;2497;2486:16;2521:3;2511:37;;2528:18;;:::i;:::-;2585:3;2581:1;2578;2567:16;2562:27;2557:32;;;2429:166;;;;:::o;2600:192::-;2637:3;2684:5;2681:1;2670:20;2718:7;2714:12;2705:7;2702:25;2699:51;;2730:18;;:::i;:::-;-1:-1:-1;;2766:20:2;;2600:192;-1:-1:-1;;2600:192:2:o;2797:128::-;2864:9;;;2885:11;;;2882:37;;;2899:18;;:::i;:::-;2797:128;;;;:::o;2930:125::-;2995:9;;;3016:10;;;3013:36;;;3029:18;;:::i;3060:193::-;3158:1;3147:16;;;3129;;;;3125:39;-1:-1:-1;;3179:23:2;;3214:8;3204:19;;3176:48;3173:74;;;3227:18;;:::i;3258:237::-;3296:7;3373:1;3370;3359:16;3355:1;3352;3341:16;3337:39;3410:11;3407:1;3396:26;3385:37;;3453:11;3444:7;3441:24;3431:58;;3469:18;;:::i;:::-;3431:58;3258:237;;;;:::o;3500:151::-;3590:4;3583:12;;;3569;;;3565:31;;3608:14;;3605:40;;;3625:18;;:::i;3656:189::-;3752:1;3723:16;;;3741;;;;3719:39;3806:7;3773:18;;-1:-1:-1;;3793:22:2;;3770:46;3767:72;;;3819:18;;:::i;3850:148::-;3938:4;3917:12;;;3931;;;3913:31;;3956:13;;3953:39;;;3972:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "389400",
								"executionCost": "458",
								"totalCost": "389858"
							},
							"external": {
								"flipTick(mapping(int16 => uint256) storage,int24,int24)": "infinite",
								"nextInitializedTickWithinOneWord(mapping(int16 => uint256) storage,int24,int24,bool)": "infinite",
								"position(int24)": "510"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 339,
									"end": 4227,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 339,
									"end": 4227,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ee4d7a7ac053e6201ad25e14019fe81848cd0a9c3797c00f1fd07b7a2ccab7264736f6c634300081a0033",
									".code": [
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "120B7FF9"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "3E7B7779"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "9C4BBA91"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 339,
											"end": 4227,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2234,
											"end": 4224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2234,
											"end": 4224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 944,
											"end": 945,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 933,
											"end": 954,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 933,
											"end": 954,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 933,
											"end": 954,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 933,
											"end": 954,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 915,
											"end": 955,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 915,
											"end": 955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 986,
											"end": 988,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 971,
											"end": 989,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 971,
											"end": 989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 888,
											"end": 906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 699,
											"end": 869,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 699,
											"end": 869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 699,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 699,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 699,
											"end": 869,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 699,
											"end": 869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 699,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 699,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 869,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 699,
											"end": 869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 699,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 699,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 869,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 699,
											"end": 869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 699,
											"end": 869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 699,
											"end": 869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1416,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1404,
											"end": 1425,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1425,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1425,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1462,
											"end": 1479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1459,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1435,
											"end": 1480,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 699,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1212,
											"end": 1486,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1131,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2421,
											"end": 2431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2488,
											"end": 2499,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2485,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2481,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2518,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2514,
											"end": 2522,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2522,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2549,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2514,
											"end": 2549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2526,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2533,
											"end": 2544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2530,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2526,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2544,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2526,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2549,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2526,
											"end": 2549,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2549,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2549,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2549,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2514,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2563,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2510,
											"end": 2563,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2563,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2551,
											"end": 2563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2551,
											"end": 2563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2563,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2551,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2563,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2563,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2510,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 4217,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2611,
											"end": 4217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2667,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2687,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2667,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2635,
											"end": 2687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2785,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2785,
											"end": 2818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2785,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2818,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2785,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2870,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2770,
											"end": 2818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3164,
											"end": 3352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3341,
											"end": 3352,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3322,
											"end": 3336,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3322,
											"end": 3336,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3336,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3313,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3303,
											"end": 3337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3337,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3303,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3302,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3352,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3164,
											"end": 3352,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3352,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3164,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3282,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3258,
											"end": 3264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3231,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3265,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3231,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3222,
											"end": 3265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3228,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3222,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3265,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3222,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3196,
											"end": 3267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3206,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3196,
											"end": 3267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3267,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3196,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3195,
											"end": 3282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3195,
											"end": 3282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3282,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3195,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3352,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 3364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 3364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 3364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 3364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2611,
											"end": 4217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2611,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3524,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3524,
											"end": 3534,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3538,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3524,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3524,
											"end": 3538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3539,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3483,
											"end": 3539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3613,
											"end": 3625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3646,
											"end": 3647,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3631,
											"end": 3642,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3631,
											"end": 3642,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3642,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3642,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3630,
											"end": 3647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3677,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3693,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3648,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3700,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3853,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3628,
											"end": 3648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3842,
											"end": 3853,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3986,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3986,
											"end": 4205,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4205,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4181,
											"end": 4187,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4163,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4163,
											"end": 4187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4187,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4163,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4189,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4155,
											"end": 4189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4132,
											"end": 4142,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4146,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4132,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4132,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4146,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4132,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4132,
											"end": 4190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4132,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4190,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4132,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4131,
											"end": 4205,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4131,
											"end": 4205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4205,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4131,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3986,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3986,
											"end": 4205,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3986,
											"end": 4205,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3986,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4100,
											"end": 4111,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4077,
											"end": 4083,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4049,
											"end": 4084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4084,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4049,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4049,
											"end": 4093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4049,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4093,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4049,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4041,
											"end": 4095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4018,
											"end": 4028,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4032,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4018,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4018,
											"end": 4032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4032,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4018,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4018,
											"end": 4096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4018,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4018,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4017,
											"end": 4111,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4017,
											"end": 4111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4111,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4017,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4205,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2611,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 4224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 4224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 869,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 699,
											"end": 869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 806,
											"end": 815,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 806,
											"end": 815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 806,
											"end": 815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 806,
											"end": 815,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 814,
											"end": 815,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 806,
											"end": 815,
											"name": "SAR",
											"source": 1
										},
										{
											"begin": 750,
											"end": 763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 856,
											"end": 859,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 806,
											"end": 810,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 849,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 849,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 849,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 849,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 699,
											"end": 869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 699,
											"end": 869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1131,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1287,
											"end": 1298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1284,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1280,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1397,
											"end": 1408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1390,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1409,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1381,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1436,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1131,
											"end": 1486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 683,
											"end": 1446,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 683,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 745,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 773,
											"end": 774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 765,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 765,
											"end": 779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 765,
											"end": 779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 779,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 765,
											"end": 779,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 765,
											"end": 779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 796,
											"end": 797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 796,
											"end": 836,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 792,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 792,
											"end": 897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 859,
											"end": 862,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 853,
											"end": 862,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 853,
											"end": 862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 877,
											"end": 885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 885,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 877,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 877,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 885,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 877,
											"end": 885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 792,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 916,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": 911,
											"end": 912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 911,
											"end": 935,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 907,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 907,
											"end": 994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 952,
											"end": 960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 952,
											"end": 960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 952,
											"end": 960,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 952,
											"end": 960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 975,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 975,
											"end": 982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 975,
											"end": 982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 975,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 975,
											"end": 982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 975,
											"end": 982,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 975,
											"end": 982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 975,
											"end": 982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 975,
											"end": 982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 907,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 907,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 1008,
											"end": 1009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1024,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1004,
											"end": 1083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1064,
											"end": 1071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1004,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 1097,
											"end": 1098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1109,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1093,
											"end": 1168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1149,
											"end": 1156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1149,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1156,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1149,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1168,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1093,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1182,
											"end": 1183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1192,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1178,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1178,
											"end": 1249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1231,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1178,
											"end": 1249,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1178,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1272,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1263,
											"end": 1264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1272,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1259,
											"end": 1329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1296,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1311,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1259,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1351,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1339,
											"end": 1408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1368,
											"end": 1375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1375,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1390,
											"end": 1396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1408,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1339,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1430,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1418,
											"end": 1438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1437,
											"end": 1438,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1432,
											"end": 1438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1432,
											"end": 1438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1438,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1432,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1438,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1418,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 1446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 1446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 1446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2879,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1945,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2041,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2028,
											"end": 2042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2042,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2042,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2028,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2059,
											"end": 2062,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2081,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2077,
											"end": 2098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2102,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2073,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2073,
											"end": 2181,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2124,
											"end": 2127,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2119,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2073,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2073,
											"end": 2181,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2073,
											"end": 2181,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2073,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2160,
											"end": 2169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2169,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2073,
											"end": 2181,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2073,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2195,
											"end": 2215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2191,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2241,
											"end": 2243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2236,
											"end": 2243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2191,
											"end": 2296,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2191,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2284,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2191,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2306,
											"end": 2411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2356,
											"end": 2358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2351,
											"end": 2358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2358,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2351,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2306,
											"end": 2411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2306,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2391,
											"end": 2399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2399,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2306,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2421,
											"end": 2526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2471,
											"end": 2473,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2466,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2421,
											"end": 2526,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2526,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2421,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 2514,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2506,
											"end": 2514,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2514,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2526,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2421,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2544,
											"end": 2559,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2540,
											"end": 2559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2536,
											"end": 2638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2580,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2580,
											"end": 2586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2580,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2580,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2580,
											"end": 2586,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2580,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2580,
											"end": 2586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2580,
											"end": 2586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2536,
											"end": 2638,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2536,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2626,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2536,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2656,
											"end": 2659,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2648,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2685,
											"end": 2686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2680,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2648,
											"end": 2738,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2738,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2648,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2719,
											"end": 2726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2726,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2738,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2648,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 2759,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2752,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2748,
											"end": 2838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2785,
											"end": 2786,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2780,
											"end": 2786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2748,
											"end": 2838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2748,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2819,
											"end": 2826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2826,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2748,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2856,
											"end": 2859,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2852,
											"end": 2859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2852,
											"end": 2859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2852,
											"end": 2863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2848,
											"end": 2871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2870,
											"end": 2871,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2865,
											"end": 2871,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2865,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 174,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 14,
											"end": 174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 80,
											"end": 100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 80,
											"end": 100,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 140,
											"end": 141,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 129,
											"end": 149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 129,
											"end": 149,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 119,
											"end": 150,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 119,
											"end": 150,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 109,
											"end": 168,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 164,
											"end": 165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 154,
											"end": 166,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 179,
											"end": 738,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 179,
											"end": 738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 297,
											"end": 303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 358,
											"end": 361,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 346,
											"end": 355,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 337,
											"end": 344,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 333,
											"end": 356,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 329,
											"end": 362,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 326,
											"end": 379,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 326,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 326,
											"end": 379,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 375,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 377,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 326,
											"end": 379,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 326,
											"end": 379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 420,
											"end": 443,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 420,
											"end": 443,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 420,
											"end": 443,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 486,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 521,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 503,
											"end": 521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 486,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 486,
											"end": 522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 486,
											"end": 522,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 486,
											"end": 522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 476,
											"end": 522,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 476,
											"end": 522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 541,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 573,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 571,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 558,
											"end": 576,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 541,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 541,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 541,
											"end": 577,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 541,
											"end": 577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 531,
											"end": 577,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 531,
											"end": 577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 631,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 618,
											"end": 627,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 614,
											"end": 632,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 633,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 678,
											"end": 685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 671,
											"end": 686,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 664,
											"end": 687,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 655,
											"end": 662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 652,
											"end": 688,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 642,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 642,
											"end": 706,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 702,
											"end": 703,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 700,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 692,
											"end": 704,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 642,
											"end": 706,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 642,
											"end": 706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 179,
											"end": 738,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 179,
											"end": 738,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 179,
											"end": 738,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 179,
											"end": 738,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 179,
											"end": 738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 738,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 179,
											"end": 738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1207,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1025,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1121,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1138,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1155,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1103,
											"end": 1155,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1153,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1155,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1103,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1174,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1174,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1174,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1174,
											"end": 1201,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1174,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1207,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1025,
											"end": 1207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1880,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1491,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1644,
											"end": 1653,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1635,
											"end": 1642,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1627,
											"end": 1659,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1670,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1674,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 1740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 1740,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 1740,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1783,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1815,
											"end": 1817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1783,
											"end": 1819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1819,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1783,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1870,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1859,
											"end": 1868,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1838,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1874,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1838,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1880,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1880,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1880,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2012,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1885,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 1956,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1941,
											"end": 1944,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 1981,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1967,
											"end": 1982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1998,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2006,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2144,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2017,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 2073,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2069,
											"end": 2089,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2113,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2099,
											"end": 2114,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2137,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2138,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2424,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2149,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2225,
											"end": 2226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2214,
											"end": 2230,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2250,
											"end": 2266,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2275,
											"end": 2312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2292,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2292,
											"end": 2310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2310,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2292,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7FFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2328,
											"end": 2349,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2349,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2351,
											"end": 2366,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2367,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2390,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2321,
											"end": 2390,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2370,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2370,
											"end": 2388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2388,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2370,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2418,
											"name": "SDIV",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2418,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2424,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2149,
											"end": 2424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2595,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2429,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2459,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2498,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2486,
											"end": 2502,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2511,
											"end": 2548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2528,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2528,
											"end": 2546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2546,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2528,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2588,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2582,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2578,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2567,
											"end": 2583,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "SMOD",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2792,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2600,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2682,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2670,
											"end": 2690,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "7FFFFF"
										},
										{
											"begin": 2714,
											"end": 2726,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2730,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2730,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2748,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2730,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2766,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2786,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2600,
											"end": 2792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2925,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2797,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2873,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2896,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2899,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2899,
											"end": 2917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2917,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2899,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2925,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3055,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2930,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3004,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3016,
											"end": 3026,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3016,
											"end": 3026,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3016,
											"end": 3026,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3049,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3013,
											"end": 3049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3029,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3253,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3060,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3159,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3147,
											"end": 3163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3147,
											"end": 3163,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3147,
											"end": 3163,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 3125,
											"end": 3164,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7FFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3179,
											"end": 3202,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3202,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3214,
											"end": 3222,
											"name": "PUSH",
											"source": 2,
											"value": "7FFFFF"
										},
										{
											"begin": 3204,
											"end": 3223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3204,
											"end": 3223,
											"name": "SGT",
											"source": 2
										},
										{
											"begin": 3176,
											"end": 3224,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3173,
											"end": 3247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3173,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3173,
											"end": 3247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3227,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3227,
											"end": 3245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3495,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3258,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3374,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3352,
											"end": 3353,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3341,
											"end": 3357,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3376,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3396,
											"end": 3422,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3441,
											"end": 3465,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3431,
											"end": 3489,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3469,
											"end": 3487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3495,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3500,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3594,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3583,
											"end": 3595,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3581,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3581,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3565,
											"end": 3596,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3565,
											"end": 3596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3622,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3645,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3605,
											"end": 3645,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3625,
											"end": 3643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3656,
											"end": 3845,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3656,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3753,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3723,
											"end": 3739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3739,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 3741,
											"end": 3757,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3741,
											"end": 3757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3741,
											"end": 3757,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3741,
											"end": 3757,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 3719,
											"end": 3758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH",
											"source": 2,
											"value": "7FFFFF"
										},
										{
											"begin": 3773,
											"end": 3791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3773,
											"end": 3791,
											"name": "SGT",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7FFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3793,
											"end": 3815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3815,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3816,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3767,
											"end": 3839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3819,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3998,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3850,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 3942,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3917,
											"end": 3929,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 3929,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 3929,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3943,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3943,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3913,
											"end": 3944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3913,
											"end": 3944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3956,
											"end": 3969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3956,
											"end": 3969,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3992,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3953,
											"end": 3992,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3972,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"src/lib/BitMath.sol",
								"src/lib/TickBitmap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"flipTick(mapping(int16 => uint256) storage,int24,int24)": "9c4bba91",
							"nextInitializedTickWithinOneWord(mapping(int16 => uint256) storage,int24,int24,bool)": "120b7ff9",
							"position(int24)": "3e7b7779"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"position\",\"outputs\":[{\"internalType\":\"int16\",\"name\":\"wordPos\",\"type\":\"int16\"},{\"internalType\":\"uint8\",\"name\":\"bitPos\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\",\"kind\":\"dev\",\"methods\":{\"flipTick(mapping(int16 => uint256) storage,int24,int24)\":{\"params\":{\"self\":\"The mapping in which to flip the tick\",\"tick\":\"The tick to flip\",\"tickSpacing\":\"The spacing between usable ticks\"}},\"nextInitializedTickWithinOneWord(mapping(int16 => uint256) storage,int24,int24,bool)\":{\"params\":{\"lte\":\"Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\",\"self\":\"The mapping in which to compute the next initialized tick\",\"tick\":\"The starting tick\",\"tickSpacing\":\"The spacing between usable ticks\"},\"returns\":{\"initialized\":\"Whether the next tick is initialized, as the function only searches within up to 256 ticks\",\"next\":\"The next initialized or uninitialized tick up to 256 ticks away from the current tick\"}},\"position(int24)\":{\"params\":{\"tick\":\"The tick for which to compute the position\"},\"returns\":{\"bitPos\":\"The bit position in the word where the flag is stored\",\"wordPos\":\"The key in the mapping containing the word in which the bit is stored\"}}},\"title\":\"Packed tick initialized state library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"flipTick(mapping(int16 => uint256) storage,int24,int24)\":{\"notice\":\"Flips the initialized state for a given tick from false to true, or vice versa\"},\"nextInitializedTickWithinOneWord(mapping(int16 => uint256) storage,int24,int24,bool)\":{\"notice\":\"Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either to the left (less than or equal to) or right (greater than) of the given tick\"},\"position(int24)\":{\"notice\":\"Computes the position in the mapping where the initialized bit for a tick lives\"}},\"notice\":\"Stores a packed mapping of tick index to its initialized state\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/TickBitmap.sol\":\"TickBitmap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\\r\",\":forge-std/=lib/forge-std/src/\\r\",\":prb-math/=lib/prb-math/contracts/\"]},\"sources\":{\"src/lib/BitMath.sol\":{\"keccak256\":\"0x3494469e9159272b661e57c5a15a0513e99ae9e9cf0ecfc6d3a4fa6002874482\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea3355f73915fb48a597944581ee6ff4736c04e7a3ec26b20001bfecd0178c7d\",\"dweb:/ipfs/QmVkpV8dsWGuJLFv1GSCNsNBmVJ9DqscW8p2VkZe7suQQV\"]},\"src/lib/TickBitmap.sol\":{\"keccak256\":\"0x038a4877a22147210d7e95a4a81fa37dffcc1b8149ddb1a90fd735eb448825eb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8ab4561a43b0f13d8a7bb8ed7e72bd19443da263f82eb2aca60036cac1554cb3\",\"dweb:/ipfs/QmaYzebsMUv5X75Tqp4MHNoktPH17ZGq7QJXSJJsn1k3sE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"flipTick(mapping(int16 => uint256) storage,int24,int24)": {
								"notice": "Flips the initialized state for a given tick from false to true, or vice versa"
							},
							"nextInitializedTickWithinOneWord(mapping(int16 => uint256) storage,int24,int24,bool)": {
								"notice": "Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either to the left (less than or equal to) or right (greater than) of the given tick"
							},
							"position(int24)": {
								"notice": "Computes the position in the mapping where the initialized bit for a tick lives"
							}
						},
						"notice": "Stores a packed mapping of tick index to its initialized state",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/lib/BitMath.sol": {
				"ast": {
					"absolutePath": "src/lib/BitMath.sol",
					"exportedSymbols": {
						"BitMath": [
							278
						]
					},
					"id": 279,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BitMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "74:118:0",
								"text": "@title BitMath\n @dev This library provides functionality for computing bit properties of an unsigned integer"
							},
							"fullyImplemented": true,
							"id": 278,
							"linearizedBaseContracts": [
								278
							],
							"name": "BitMath",
							"nameLocation": "200:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "754:692:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 11,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "773:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "777:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "773:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 10,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "765:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "765:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "765:14:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 16,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "796:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "801:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"src": "796:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 28,
												"nodeType": "IfStatement",
												"src": "792:105:0",
												"trueBody": {
													"id": 27,
													"nodeType": "Block",
													"src": "838:59:0",
													"statements": [
														{
															"expression": {
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 19,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "853:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "859:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "853:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 22,
															"nodeType": "ExpressionStatement",
															"src": "853:9:0"
														},
														{
															"expression": {
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 23,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "877:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 24,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "882:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "877:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 26,
															"nodeType": "ExpressionStatement",
															"src": "877:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 29,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "911:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030303030303030303030303030",
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "916:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"value": "0x10000000000000000"
													},
													"src": "911:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 41,
												"nodeType": "IfStatement",
												"src": "907:87:0",
												"trueBody": {
													"id": 40,
													"nodeType": "Block",
													"src": "937:57:0",
													"statements": [
														{
															"expression": {
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 32,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "952:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "958:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "952:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 35,
															"nodeType": "ExpressionStatement",
															"src": "952:8:0"
														},
														{
															"expression": {
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 36,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "975:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "980:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "975:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 39,
															"nodeType": "ExpressionStatement",
															"src": "975:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 42,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1008:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1013:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"value": "0x100000000"
													},
													"src": "1008:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 54,
												"nodeType": "IfStatement",
												"src": "1004:79:0",
												"trueBody": {
													"id": 53,
													"nodeType": "Block",
													"src": "1026:57:0",
													"statements": [
														{
															"expression": {
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 45,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "1041:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1047:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1041:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 48,
															"nodeType": "ExpressionStatement",
															"src": "1041:8:0"
														},
														{
															"expression": {
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 49,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "1064:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1069:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1064:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 52,
															"nodeType": "ExpressionStatement",
															"src": "1064:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 55,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1097:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030",
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1102:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "0x10000"
													},
													"src": "1097:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 67,
												"nodeType": "IfStatement",
												"src": "1093:75:0",
												"trueBody": {
													"id": 66,
													"nodeType": "Block",
													"src": "1111:57:0",
													"statements": [
														{
															"expression": {
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 58,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "1126:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1132:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1126:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 61,
															"nodeType": "ExpressionStatement",
															"src": "1126:8:0"
														},
														{
															"expression": {
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 62,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "1149:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1154:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1149:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "1149:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1182:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1187:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x100"
													},
													"src": "1182:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 80,
												"nodeType": "IfStatement",
												"src": "1178:71:0",
												"trueBody": {
													"id": 79,
													"nodeType": "Block",
													"src": "1194:55:0",
													"statements": [
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 71,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "1209:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1215:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1209:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "1209:7:0"
														},
														{
															"expression": {
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 75,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "1231:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1236:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1231:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 78,
															"nodeType": "ExpressionStatement",
															"src": "1231:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 81,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1263:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130",
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1268:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "0x10"
													},
													"src": "1263:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 93,
												"nodeType": "IfStatement",
												"src": "1259:70:0",
												"trueBody": {
													"id": 92,
													"nodeType": "Block",
													"src": "1274:55:0",
													"statements": [
														{
															"expression": {
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 84,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "1289:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 85,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1295:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1289:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 87,
															"nodeType": "ExpressionStatement",
															"src": "1289:7:0"
														},
														{
															"expression": {
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 88,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "1311:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1316:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1311:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 91,
															"nodeType": "ExpressionStatement",
															"src": "1311:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 94,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1343:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307834",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1348:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "0x4"
													},
													"src": "1343:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 106,
												"nodeType": "IfStatement",
												"src": "1339:69:0",
												"trueBody": {
													"id": 105,
													"nodeType": "Block",
													"src": "1353:55:0",
													"statements": [
														{
															"expression": {
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 97,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "1368:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1374:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1368:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 100,
															"nodeType": "ExpressionStatement",
															"src": "1368:7:0"
														},
														{
															"expression": {
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 101,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "1390:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1395:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1390:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 104,
															"nodeType": "ExpressionStatement",
															"src": "1390:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 107,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1422:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307832",
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1427:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "0x2"
													},
													"src": "1422:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 114,
												"nodeType": "IfStatement",
												"src": "1418:20:0",
												"trueBody": {
													"expression": {
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 110,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "1432:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1437:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1432:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 113,
													"nodeType": "ExpressionStatement",
													"src": "1432:6:0"
												}
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "215:462:0",
										"text": "@notice Returns the index of the most significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n @param x the value for which to compute the most significant bit, must be greater than 0\n @return r the index of the most significant bit"
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nameLocation": "692:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "719:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "711:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "710:11:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "751:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "745:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 7,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "745:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:9:0"
									},
									"scope": 278,
									"src": "683:763:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "2017:862:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 125,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "2036:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2040:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2036:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2028:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2028:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "2028:14:0"
											},
											{
												"expression": {
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 130,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2055:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323535",
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2059:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "2055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "2055:7:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 134,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2077:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2086:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 136,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2086:7:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 135,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2081:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2081:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2095:3:0",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2081:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "2077:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2077:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 152,
													"nodeType": "Block",
													"src": "2145:36:0",
													"statements": [
														{
															"expression": {
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 148,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2160:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2166:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2160:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 151,
															"nodeType": "ExpressionStatement",
															"src": "2160:9:0"
														}
													]
												},
												"id": 153,
												"nodeType": "IfStatement",
												"src": "2073:108:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "2104:35:0",
													"statements": [
														{
															"expression": {
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 143,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2119:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2124:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2119:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 146,
															"nodeType": "ExpressionStatement",
															"src": "2119:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 154,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2195:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2204:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 156,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "2204:6:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		}
																	],
																	"id": 155,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2199:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2199:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint64",
																	"typeString": "type(uint64)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2212:3:0",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2199:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "2195:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2218:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2195:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "2261:35:0",
													"statements": [
														{
															"expression": {
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 168,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2276:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2282:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2276:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 171,
															"nodeType": "ExpressionStatement",
															"src": "2276:8:0"
														}
													]
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "2191:105:0",
												"trueBody": {
													"id": 167,
													"nodeType": "Block",
													"src": "2221:34:0",
													"statements": [
														{
															"expression": {
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 163,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2236:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2241:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2236:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 166,
															"nodeType": "ExpressionStatement",
															"src": "2236:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 174,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2310:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2319:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 176,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2319:6:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		}
																	],
																	"id": 175,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2314:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2314:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint32",
																	"typeString": "type(uint32)"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2327:3:0",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2314:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "2310:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2333:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2310:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 192,
													"nodeType": "Block",
													"src": "2376:35:0",
													"statements": [
														{
															"expression": {
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 188,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2391:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2397:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2391:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 191,
															"nodeType": "ExpressionStatement",
															"src": "2391:8:0"
														}
													]
												},
												"id": 193,
												"nodeType": "IfStatement",
												"src": "2306:105:0",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "2336:34:0",
													"statements": [
														{
															"expression": {
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 183,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2351:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2356:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2351:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "2351:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 194,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2425:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2434:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 196,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "2434:6:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		}
																	],
																	"id": 195,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2429:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2429:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint16",
																	"typeString": "type(uint16)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2442:3:0",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2429:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "2425:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2448:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2425:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 212,
													"nodeType": "Block",
													"src": "2491:35:0",
													"statements": [
														{
															"expression": {
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 208,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2506:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2512:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2506:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 211,
															"nodeType": "ExpressionStatement",
															"src": "2506:8:0"
														}
													]
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "2421:105:0",
												"trueBody": {
													"id": 207,
													"nodeType": "Block",
													"src": "2451:34:0",
													"statements": [
														{
															"expression": {
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 203,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2466:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2471:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2466:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 206,
															"nodeType": "ExpressionStatement",
															"src": "2466:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 214,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2540:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2549:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 216,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "2549:5:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		}
																	],
																	"id": 215,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2544:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2544:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint8",
																	"typeString": "type(uint8)"
																}
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2556:3:0",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2544:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2540:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2562:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2540:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 232,
													"nodeType": "Block",
													"src": "2604:34:0",
													"statements": [
														{
															"expression": {
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 228,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2619:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2625:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2619:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 231,
															"nodeType": "ExpressionStatement",
															"src": "2619:7:0"
														}
													]
												},
												"id": 233,
												"nodeType": "IfStatement",
												"src": "2536:102:0",
												"trueBody": {
													"id": 227,
													"nodeType": "Block",
													"src": "2565:33:0",
													"statements": [
														{
															"expression": {
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 223,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2580:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2585:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2580:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 226,
															"nodeType": "ExpressionStatement",
															"src": "2580:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 234,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2652:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307866",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "0xf"
														},
														"src": "2652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2662:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2652:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 248,
													"nodeType": "Block",
													"src": "2704:34:0",
													"statements": [
														{
															"expression": {
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 244,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2719:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2725:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2719:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 247,
															"nodeType": "ExpressionStatement",
															"src": "2719:7:0"
														}
													]
												},
												"id": 249,
												"nodeType": "IfStatement",
												"src": "2648:90:0",
												"trueBody": {
													"id": 243,
													"nodeType": "Block",
													"src": "2665:33:0",
													"statements": [
														{
															"expression": {
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 239,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2680:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2685:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2680:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 242,
															"nodeType": "ExpressionStatement",
															"src": "2680:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 250,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2752:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307833",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2756:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "0x3"
														},
														"src": "2752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2762:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2752:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 264,
													"nodeType": "Block",
													"src": "2804:34:0",
													"statements": [
														{
															"expression": {
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 260,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2819:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2825:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 263,
															"nodeType": "ExpressionStatement",
															"src": "2819:7:0"
														}
													]
												},
												"id": 265,
												"nodeType": "IfStatement",
												"src": "2748:90:0",
												"trueBody": {
													"id": 259,
													"nodeType": "Block",
													"src": "2765:33:0",
													"statements": [
														{
															"expression": {
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 255,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2780:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2785:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2780:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 258,
															"nodeType": "ExpressionStatement",
															"src": "2780:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 266,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2852:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831",
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2856:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "0x1"
														},
														"src": "2852:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2862:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2852:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 275,
												"nodeType": "IfStatement",
												"src": "2848:23:0",
												"trueBody": {
													"expression": {
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 271,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "2865:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2870:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2865:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 274,
													"nodeType": "ExpressionStatement",
													"src": "2865:6:0"
												}
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "1454:485:0",
										"text": "@notice Returns the index of the least significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n @param x the value for which to compute the least significant bit, must be greater than 0\n @return r the index of the least significant bit"
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leastSignificantBit",
									"nameLocation": "1954:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1982:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1974:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:11:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2014:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2008:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 121,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2008:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:9:0"
									},
									"scope": 278,
									"src": "1945:934:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 279,
							"src": "192:2690:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:2836:0"
				},
				"id": 0
			},
			"src/lib/TickBitmap.sol": {
				"ast": {
					"absolutePath": "src/lib/TickBitmap.sol",
					"exportedSymbols": {
						"BitMath": [
							278
						],
						"TickBitmap": [
							551
						]
					},
					"id": 552,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 280,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:1"
						},
						{
							"absolutePath": "src/lib/BitMath.sol",
							"file": "./BitMath.sol",
							"id": 281,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 279,
							"src": "66:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickBitmap",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 282,
								"nodeType": "StructuredDocumentation",
								"src": "93:246:1",
								"text": "@title Packed tick initialized state library\n @notice Stores a packed mapping of tick index to its initialized state\n @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word."
							},
							"fullyImplemented": true,
							"id": 551,
							"linearizedBaseContracts": [
								551
							],
							"name": "TickBitmap",
							"nameLocation": "347:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "779:90:1",
										"statements": [
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 292,
														"name": "wordPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "790:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 295,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "806:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "814:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "806:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "800:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 293,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "800:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "800:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "790:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "790:26:1"
											},
											{
												"expression": {
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 301,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "827:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 306,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "849:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"hexValue": "323536",
																			"id": 307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "856:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "256"
																		},
																		"src": "849:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "842:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 304,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "842:6:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "842:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "836:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 302,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "836:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "836:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "827:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "827:34:1"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "365:328:1",
										"text": "@notice Computes the position in the mapping where the initialized bit for a tick lives\n @param tick The tick for which to compute the position\n @return wordPos The key in the mapping containing the word in which the bit is stored\n @return bitPos The bit position in the word where the flag is stored"
									},
									"functionSelector": "3e7b7779",
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "position",
									"nameLocation": "708:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "717:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 284,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "717:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "716:12:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "wordPos",
												"nameLocation": "756:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "750:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 287,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "750:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "bitPos",
												"nameLocation": "771:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "765:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 289,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "765:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:29:1"
									},
									"scope": 551,
									"src": "699:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "1261:225:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 327,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "1280:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 328,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "1287:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "1280:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1302:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1280:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1272:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1272:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "1272:32:1"
											},
											{
												"assignments": [
													335,
													337
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "wordPos",
														"nameLocation": "1356:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 356,
														"src": "1350:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														},
														"typeName": {
															"id": 334,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "1350:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 337,
														"mutability": "mutable",
														"name": "bitPos",
														"nameLocation": "1371:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 356,
														"src": "1365:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 336,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 339,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "1390:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 340,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "1397:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "1390:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"id": 338,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "1381:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
															"typeString": "function (int24) pure returns (int16,uint8)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1381:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
														"typeString": "tuple(int16,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1349:60:1"
											},
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "mask",
														"nameLocation": "1428:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 356,
														"src": "1420:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1420:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1435:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 347,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "1440:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1435:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1420:26:1"
											},
											{
												"expression": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 350,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "1457:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																"typeString": "mapping(int16 => uint256)"
															}
														},
														"id": 352,
														"indexExpression": {
															"id": 351,
															"name": "wordPos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1462:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1457:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "^=",
													"rightHandSide": {
														"id": 353,
														"name": "mask",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "1474:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1457:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "1457:21:1"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "877:248:1",
										"text": "@notice Flips the initialized state for a given tick from false to true, or vice versa\n @param self The mapping in which to flip the tick\n @param tick The tick to flip\n @param tickSpacing The spacing between usable ticks"
									},
									"functionSelector": "9c4bba91",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flipTick",
									"nameLocation": "1140:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1193:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1159:38:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 318,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 316,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "1167:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "1159:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 317,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1176:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1214:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1208:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 320,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1208:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1235:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1229:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 322,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1229:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1148:105:1"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:0:1"
									},
									"scope": 551,
									"src": "1131:355:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "2451:1773:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "compressed",
														"nameLocation": "2468:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "2462:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 375,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2462:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 377,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "2481:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 378,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "2488:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2481:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2462:37:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 381,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "2514:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2521:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2514:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "2526:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 385,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "2533:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2526:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2548:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2526:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2514:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"nodeType": "IfStatement",
												"src": "2510:53:1",
												"trueBody": {
													"expression": {
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "2551:12:1",
														"subExpression": {
															"id": 390,
															"name": "compressed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "2551:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 392,
													"nodeType": "ExpressionStatement",
													"src": "2551:12:1"
												}
											},
											{
												"condition": {
													"id": 394,
													"name": "lte",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 368,
													"src": "2615:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 547,
													"nodeType": "Block",
													"src": "3370:847:1",
													"statements": [
														{
															"assignments": [
																467,
																469
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 467,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nameLocation": "3490:7:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 547,
																	"src": "3484:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 466,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "3484:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 469,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nameLocation": "3505:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 547,
																	"src": "3499:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 468,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3499:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 475,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 471,
																			"name": "compressed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 376,
																			"src": "3524:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3537:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3524:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 470,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "3515:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3515:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3483:56:1"
														},
														{
															"assignments": [
																477
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 477,
																	"mutability": "mutable",
																	"name": "mask",
																	"nameLocation": "3621:4:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 547,
																	"src": "3613:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 476,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3613:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 486,
															"initialValue": {
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "~",
																"prefix": true,
																"src": "3628:20:1",
																"subExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 480,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 478,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3631:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 479,
																							"name": "bitPos",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 469,
																							"src": "3636:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "3631:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 481,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3630:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3646:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3630:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 484,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3629:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3613:35:1"
														},
														{
															"assignments": [
																488
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 488,
																	"mutability": "mutable",
																	"name": "masked",
																	"nameLocation": "3671:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 547,
																	"src": "3663:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 487,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3663:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 494,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 489,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3680:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 491,
																	"indexExpression": {
																		"id": 490,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "3685:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3680:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 492,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "3696:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3663:37:1"
														},
														{
															"expression": {
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 495,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "3828:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 496,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "3842:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3852:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3842:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3828:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 500,
															"nodeType": "ExpressionStatement",
															"src": "3828:25:1"
														},
														{
															"expression": {
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 501,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "3979:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 502,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "3986:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 540,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 525,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 523,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 376,
																							"src": "4132:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 524,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4145:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4132:14:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"components": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												},
																												"id": 536,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"expression": {
																														"arguments": [
																															{
																																"id": 532,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"lValueRequested": false,
																																"nodeType": "ElementaryTypeNameExpression",
																																"src": "4168:5:1",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_type$_t_uint8_$",
																																	"typeString": "type(uint8)"
																																},
																																"typeName": {
																																	"id": 531,
																																	"name": "uint8",
																																	"nodeType": "ElementaryTypeName",
																																	"src": "4168:5:1",
																																	"typeDescriptions": {}
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_type$_t_uint8_$",
																																	"typeString": "type(uint8)"
																																}
																															],
																															"id": 530,
																															"name": "type",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 4294967269,
																															"src": "4163:4:1",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																																"typeString": "function () pure"
																															}
																														},
																														"id": 533,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"nameLocations": [],
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "4163:11:1",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_magic_meta_type_t_uint8",
																															"typeString": "type(uint8)"
																														}
																													},
																													"id": 534,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"lValueRequested": false,
																													"memberLocation": "4175:3:1",
																													"memberName": "max",
																													"nodeType": "MemberAccess",
																													"src": "4163:15:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "-",
																												"rightExpression": {
																													"id": 535,
																													"name": "bitPos",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 469,
																													"src": "4181:6:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"src": "4163:24:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											}
																										],
																										"id": 537,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "4162:26:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 529,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4155:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 528,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "4155:6:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 538,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4155:34:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 527,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4149:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 526,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "4149:5:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 539,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4149:41:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "4132:58:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 541,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4131:60:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 542,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "4194:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "4131:74:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3986:219:1",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 519,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 505,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 503,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 376,
																							"src": "4018:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 504,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4031:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4018:14:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"components": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												},
																												"id": 515,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"arguments": [
																														{
																															"id": 512,
																															"name": "masked",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 488,
																															"src": "4077:6:1",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"expression": {
																														"argumentTypes": [
																															{
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														],
																														"expression": {
																															"id": 510,
																															"name": "BitMath",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 278,
																															"src": "4049:7:1",
																															"typeDescriptions": {
																																"typeIdentifier": "t_type$_t_contract$_BitMath_$278_$",
																																"typeString": "type(library BitMath)"
																															}
																														},
																														"id": 511,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"memberLocation": "4057:19:1",
																														"memberName": "leastSignificantBit",
																														"nodeType": "MemberAccess",
																														"referencedDeclaration": 277,
																														"src": "4049:27:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																															"typeString": "function (uint256) pure returns (uint8)"
																														}
																													},
																													"id": 513,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"kind": "functionCall",
																													"lValueRequested": false,
																													"nameLocations": [],
																													"names": [],
																													"nodeType": "FunctionCall",
																													"src": "4049:35:1",
																													"tryCall": false,
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "-",
																												"rightExpression": {
																													"id": 514,
																													"name": "bitPos",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 469,
																													"src": "4087:6:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"src": "4049:44:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											}
																										],
																										"id": 516,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "4048:46:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 509,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4041:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 508,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "4041:6:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 517,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4041:54:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 507,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4035:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 506,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "4035:5:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 518,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4035:61:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "4018:78:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 520,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4017:80:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 521,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "4100:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "4017:94:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3979:226:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 546,
															"nodeType": "ExpressionStatement",
															"src": "3979:226:1"
														}
													]
												},
												"id": 548,
												"nodeType": "IfStatement",
												"src": "2611:1606:1",
												"trueBody": {
													"id": 465,
													"nodeType": "Block",
													"src": "2620:744:1",
													"statements": [
														{
															"assignments": [
																396,
																398
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 396,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nameLocation": "2642:7:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 465,
																	"src": "2636:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 395,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "2636:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 398,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nameLocation": "2657:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 465,
																	"src": "2651:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 397,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2651:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 402,
															"initialValue": {
																"arguments": [
																	{
																		"id": 400,
																		"name": "compressed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "2676:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 399,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "2667:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2667:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2635:52:1"
														},
														{
															"assignments": [
																404
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 404,
																	"mutability": "mutable",
																	"name": "mask",
																	"nameLocation": "2778:4:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 465,
																	"src": "2770:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 403,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2770:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 416,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 405,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2786:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 406,
																					"name": "bitPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 398,
																					"src": "2791:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "2786:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 408,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2785:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2801:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2785:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2806:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 412,
																				"name": "bitPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 398,
																				"src": "2811:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2806:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 414,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2805:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2785:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2770:48:1"
														},
														{
															"assignments": [
																418
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 418,
																	"mutability": "mutable",
																	"name": "masked",
																	"nameLocation": "2841:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 465,
																	"src": "2833:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 417,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2833:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 424,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 419,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "2850:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 421,
																	"indexExpression": {
																		"id": 420,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "2855:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2850:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 422,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "2866:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2850:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2833:37:1"
														},
														{
															"expression": {
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 425,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "3006:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "3020:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3030:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3020:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3006:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 430,
															"nodeType": "ExpressionStatement",
															"src": "3006:25:1"
														},
														{
															"expression": {
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 431,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "3157:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 432,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "3164:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 458,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 450,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 376,
																						"src": "3303:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 455,
																										"name": "bitPos",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 398,
																										"src": "3329:6:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 454,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3322:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 453,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "3322:6:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 456,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3322:14:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 452,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3316:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 451,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3316:5:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 457,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3316:21:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3303:34:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 459,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3302:36:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 460,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "3341:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3302:50:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3164:188:1",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 446,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 433,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 376,
																						"src": "3196:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										},
																										"id": 443,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 438,
																											"name": "bitPos",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 398,
																											"src": "3222:6:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"arguments": [
																												{
																													"id": 441,
																													"name": "masked",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 418,
																													"src": "3258:6:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												],
																												"expression": {
																													"id": 439,
																													"name": "BitMath",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 278,
																													"src": "3231:7:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_type$_t_contract$_BitMath_$278_$",
																														"typeString": "type(library BitMath)"
																													}
																												},
																												"id": 440,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "3239:18:1",
																												"memberName": "mostSignificantBit",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 116,
																												"src": "3231:26:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																													"typeString": "function (uint256) pure returns (uint8)"
																												}
																											},
																											"id": 442,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "3231:34:1",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"src": "3222:43:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 437,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3215:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 436,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "3215:6:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 444,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3215:51:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 435,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3209:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 434,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3209:5:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 445,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3209:58:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3196:71:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 447,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3195:73:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 448,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "3271:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3195:87:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3157:195:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 464,
															"nodeType": "ExpressionStatement",
															"src": "3157:195:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1494:734:1",
										"text": "@notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n to the left (less than or equal to) or right (greater than) of the given tick\n @param self The mapping in which to compute the next initialized tick\n @param tick The starting tick\n @param tickSpacing The spacing between usable ticks\n @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks"
									},
									"functionSelector": "120b7ff9",
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextInitializedTickWithinOneWord",
									"nameLocation": "2243:32:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "2320:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "2286:38:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 361,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 359,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "2294:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "2286:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 360,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2303:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "2341:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "2335:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 363,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "2362:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "2356:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 365,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2356:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "lte",
												"nameLocation": "2389:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "2384:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2275:124:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "next",
												"nameLocation": "2427:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "2421:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 370,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2421:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "2438:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "2433:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2433:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:30:1"
									},
									"scope": 551,
									"src": "2234:1990:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 552,
							"src": "339:3888:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "38:4189:1"
				},
				"id": 1
			}
		}
	}
}